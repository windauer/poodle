<?xml version="1.0" encoding="UTF-8"?>
<httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200">
    <httpclient:headers>
        <httpclient:header name="Server" value="Apache"/>
        <httpclient:header name="ETag" value="&#34;0ecc0c81f7b0d6fb3259fe6b5f17bec1:1406904568&#34;"/>
        <httpclient:header name="Last-Modified" value="Fri, 01 Aug 2014 14:49:28 GMT"/>
        <httpclient:header name="Accept-Ranges" value="bytes"/>
        <httpclient:header name="Content-Length" value="292543"/>
        <httpclient:header name="Content-Type" value="application/xml"/>
        <httpclient:header name="Date" value="Wed, 20 Aug 2014 09:47:59 GMT"/>
        <httpclient:header name="Connection" value="keep-alive"/>
    </httpclient:headers>
    <httpclient:body mimetype="application/xml" type="binary" encoding="Base64Encoded"><?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
    <channel>
        <itunes:owner>
            <itunes:name>Radio24syv | Arkiv</itunes:name>
            <itunes:email>digital@radio24syv.dk</itunes:email>
        </itunes:owner>
        <title>Ugens Rapport – Radio24syv</title>
        <link>http://arkiv.radio24syv.dk</link>
        <description>Hvorfor er “luder” et hyppigt anvendt skældsord, mens “luderkunde” ikke er det? Hvorfor kan kvinder se reklamer for at få lavet “nye bryster” på busserne, mens der ikke er reklamer rettet mod mænd, fra pla- stickirurger, som tilbyder “nye pikke”? Hvorfor er det altid et problem, at folkeskolen er blevet feminiseret, for hvem siger egentlig at det partout er skæp- peskønt med en maskulin folkeskole? Spørgsmål som disse sættes til debat når feminist, aktivist og journalist Irene Manteufel går i studiet med pro- gramrækken “Ugens Rapport”. </description>
        <language>da-dk</language>
        <generator>Visualplatform</generator>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <itunes:author>Radio24syv | Arkiv</itunes:author>
        <itunes:summary>Hvorfor er “luder” et hyppigt anvendt skældsord, mens “luderkunde” ikke er det? Hvorfor kan kvinder se reklamer for at få lavet “nye bryster” på busserne, mens der ikke er reklamer rettet mod mænd, fra pla- stickirurger, som tilbyder “nye pikke”? Hvorfor er det altid et problem, at folkeskolen er blevet feminiseret, for hvem siger egentlig at det partout er skæp- peskønt med en maskulin folkeskole? Spørgsmål som disse sættes til debat når feminist, aktivist og journalist Irene Manteufel går i studiet med pro- gramrækken “Ugens Rapport”. </itunes:summary>
        <itunes:keywords>ugens rapport, radio24syv, 24syv, sexisme</itunes:keywords>
        <itunes:explicit>no</itunes:explicit>
        <itunes:image href="http://arkiv.radio24syv.dk/files/podcastimage-10027340.png"/>
        <itunes:category text="Health">
            <itunes:category text="Sexuality"/>
        </itunes:category>
        <atom:link rel="self" href="http://arkiv.radio24syv.dk/audiopodcast/channel/10027340"/>
        <atom:link rel="previous" href="http://arkiv.radio24syv.dk/audiopodcast/channel/10027340?p=658&amp;album%5fid=10027340&amp;podcast%5fp=t"/>
        <atom:link rel="next" href="http://arkiv.radio24syv.dk/audiopodcast/channel/10027340?p=660&amp;album%5fid=10027340&amp;podcast%5fp=t"/>
    </channel>
</rss>
oke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 2 - Getting Started - UI Tour -->
<title>Getting Started - Tour of the User Interface</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Tour of the Smoke User Interface</itunes:subtitle>
<itunes:summary>This movie shows you how to register, download and install Autodesk Smoke.</itunes:summary>
<description>This movie shows you how to register, download and install Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/002_UI_introduction.mp4" length="19704202" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/002_UI_introduction.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:28:42 GMT</pubDate>
<itunes:duration>6:20</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 3 - Getting Started - Project and user -->
<title>Getting Started - Creating a project and user</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Creating a Smoke Project and User</itunes:subtitle>
<itunes:summary>This movie shows you how to create a new Smoke Project and User</itunes:summary>
<description>This movie shows you how to create a new Smoke Project and User</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/003_project_user_creation.mp4" length="10242797" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/003_project_user_creation.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:31:31 GMT</pubDate>
<itunes:duration>4:56</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>

<item>
<!-- Episode 4 - Getting Started - MediaHub: Import Media -->
<title>Getting Started - Importing with MediaHub</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Import media with the MediaHub</itunes:subtitle>
<itunes:summary>This movie shows you how to import media into Smoke using the MediaHub</itunes:summary>
<description>This movie shows you how to import media into Smoke using the MediaHub</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/004_MediaHub_Import_Media.mp4" length="10887550" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/004_MediaHub_Import_Media.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:34:18 GMT</pubDate>
<itunes:duration>4:59</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>

<item>
<!-- Episode 5 - Getting Started - MediaHub: Import media with alpha -->
<title>Getting Started - Importing with media with alpha channels</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Import media with embedded alpha channels</itunes:subtitle>
<itunes:summary>This movie shows you how to import media with embedded alphas into Smoke with the MediaHub</itunes:summary>
<description>This movie shows you how to import media with embedded alphas into Smoke with the MediaHub</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/005_alpha_PSD.mp4" length="7854450" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/005_alpha_PSD.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:36:54 GMT</pubDate>
<itunes:duration>4:16</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 6 - Getting Started - Interim Conform -->
<title>Getting Started - Interim Conform</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Rebuild sequences using the MediaHub</itunes:subtitle>
<itunes:summary>This movie shows you how to rebuild sequences from other applications using the interim conform method.  Subject to change.</itunes:summary>
<description>This movie shows you how to rebuild sequences from other applications using the interim conform method.  Subject to change.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/006_Interim_Conforming.mp4" length="13988422" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/006_Interim_Conforming.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:41:49 GMT</pubDate>
<itunes:duration>6:01</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 7 - Getting Started - Organising Your Media -->
<title>Getting Started - Organising your Media</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Organise your media in the Media Library</itunes:subtitle>
<itunes:summary>This movie shows you how to organise your media in the Media Library in Autodesk Smoke</itunes:summary>
<description>This movie shows you how to organise your media in the Media Library in Autodesk Smoke</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/007_Organising_Media.mp4" length="11309810" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/007_Organising_Media.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:44:30 GMT</pubDate>
<itunes:duration>4:21</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 8 - Getting Started - View Source Clips -->
<title>Getting Started - View your Source Clips</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>View Source Clips for editing</itunes:subtitle>
<itunes:summary>This movie looks at how you view your source clips in the source viewer to prepare them for editing.</itunes:summary>
<description>This movie looks at how you view your source clips in the source viewer to prepare them for editing.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/008_Viewing_source_clips.mp4" length="17090396" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/008_Viewing_source_clips.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:47:26 GMT</pubDate>
<itunes:duration>5:07</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 9 - Getting Started - Working With Sequences -->
<title>Getting Started - Working with Sequences</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Working with Sequences in Autodesk Smoke</itunes:subtitle>
<itunes:summary>This movie shows you how to create sequences for editing as well as manage video and audio tracks inside the sequence.</itunes:summary>
<description>This movie shows you how to create sequences for editing as well as manage video and audio tracks inside the sequence.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/009_Sequences.mp4" length="10646774" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/009_Sequences.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:50:22 GMT</pubDate>
<itunes:duration>4:12</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 10 - Getting Started - Overwrite, Insert and Drag and Drop editing -->
<title>Getting Started - Performing Overwrite, Insert and Drag and Drop editing</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Using Overwrite, Insert and Drag and Drop Editing</itunes:subtitle>
<itunes:summary>This movie looks at the familiar insert, overwrite and drag and drop editing techniques in Autodesk Smoke.</itunes:summary>
<description>This movie looks at the familiar insert, overwrite and drag and drop editing techniques in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/010_Insert_Overwrite_DragDrop.mp4" length="11473648" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/010_Insert_Overwrite_DragDrop.mp4</guid>
<pubDate>Thu, 09 Aug 2012 13:59:17 GMT</pubDate>
<itunes:duration>4:13</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 11 - Getting Started - Navigating the Sequence -->
<title>Getting Started - Navigate the Sequence</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Navigating the Sequence in Smoke</itunes:subtitle>
<itunes:summary>This movie shows you how to navigate the sequence in Autodesk Smoke. This includes zoom, pan and track scaling.</itunes:summary>
<description>This movie shows you how to navigate the sequence in Autodesk Smoke. This includes zoom, pan and track scaling.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/011_TL_Navigation.mp4" length="16844311" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/011_TL_Navigation.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:02:04 GMT</pubDate>
<itunes:duration>4:48</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 12 - Getting Started - Track Patching -->
<title>Getting Started - Patching Sequence Tracks</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Learn to use the patch panel in the sequence</itunes:subtitle>
<itunes:summary>This movie shows you how use the Patch Panel in Autodesk Smoke. This is used to patch your source media to the correct tracks in the sequence.</itunes:summary>
<description>This movie shows you how use the Patch Panel in Autodesk Smoke. This is used to patch your source media to the correct tracks in the sequence.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/012_TL_Track_Patching.mp4" length="10482649" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/012_TL_Track_Patching.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:19:36 GMT</pubDate>
<itunes:duration>4:20</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 13 - Getting Started - 3 and 4 Point Editing -->
<title>Getting Started - 3 and 4 point Editing</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Perform a 3 and 4 point edit in the sequence</itunes:subtitle>
<itunes:summary>This movie shows you the ever popular 3 and 4 point editing techniques.</itunes:summary>
<description>This movie shows you the ever popular 3 and 4 point editing techniques.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/013_3_4pt_edit.mp4" length="8134975" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/013_3_4pt_edit.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:22:17 GMT</pubDate>
<itunes:duration>2:37</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 14 - Getting Started - Moving Segments in the Sequence -->
<title>Getting Started - Moving clips in the sequence</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Moving clips in the sequence</itunes:subtitle>
<itunes:summary>This movie shows you how move segments in the sequence in Autodesk Smoke. This includes ripple and snapping options.</itunes:summary>
<description>This movie shows you how move segments in the sequence in Autodesk Smoke. This includes ripple and snapping options.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/014_Moving_Segments_Sequence.mp4" length="8959100" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/014_Moving_Segments_Sequence.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:24:23 GMT</pubDate>
<itunes:duration>3:32</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 15 - Getting Started - Working With Sync -->
<title>Getting Started - Working With Sync</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Work with Sync video and Audio segments</itunes:subtitle>
<itunes:summary>This movie shows you how to working with synced sources. This includes video with its accompanying audio. Learn how to fix sync issues through slipping and reseting the sync group</itunes:summary>
<description>This movie shows you how to working with synced sources. This includes video with its accompanying audio. Learn how to fix sync issues through slipping and reseting the sync group</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/015_Sync_Sound.mp4" length="10964466" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/015_Sync_Sound.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:26:32 GMT</pubDate>
<itunes:duration>4:32</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 16 - Getting Started - Splice, Extract, Lift and Sub-clipping -->
<title>Getting Started - Splice, Extract, Lift and Sub-clipping</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Splice, Extract, Lift and Sub-clipping in the Sequence</itunes:subtitle>
<itunes:summary>This movie shows you how splice segments in the sequence. You also see the extract and lift editing functions working in the sequence in Autodesk Smoke. </itunes:summary>
<description>This movie shows you how splice segments in the sequence. You also see the extract and lift editing functions working in the sequence in Autodesk Smoke. </description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/016_Splice_Extract_Lift.mp4" length="12202022" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/016_Splice_Extract_Lift.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:28:35 GMT</pubDate>
<itunes:duration>3:25</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 17-19 - Getting Started - Trimming -->
<title>Getting Started - Trimming in the Sequence</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>The different trimming methods when editing</itunes:subtitle>
<itunes:summary>This movie looks at the trimming functions in Autodesk Smoke. This includes roll, slip and slide trimming functionality in Autodesk Smoke.</itunes:summary>
<description>This movie looks at the trimming functions in Autodesk Smoke. This includes roll, slip and slide trimming functionality in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/017-019_Trimming.mp4" length="13160383" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/017-019_Trimming.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:31:02 GMT</pubDate>
<itunes:duration>4:19</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>


<item>
<!-- Episode 20 - Getting Started - Transitions - Dissolves and Wipes -->
<title>Getting Started - Dissolves and Wipes</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Working with transitions in the sequence</itunes:subtitle>
<itunes:summary>This movie looks at creating transitions within the sequence. This includes dissolves and wipes in Autodesk Smoke.</itunes:summary>
<description>This movie looks at creating transitions within the sequence. This includes dissolves and wipes in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/020_Transitions.mp4" length="11185637" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/020_Transitions.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:33:05 GMT</pubDate>
<itunes:duration>4:22</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 21 - Getting Started - TimelineFX Basics -->
<title>Getting Started - TimelineFX Basics</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introduction to TimelineFX</itunes:subtitle>
<itunes:summary>This movie goes through the basics of working with Timeline FX in the sequence. The topics covered are adding, deleting and rendering Timeline FX in Autodesk Smoke.</itunes:summary>
<description>This movie goes through the basics of working with Timeline FX in the sequence. The topics covered are adding, deleting and rendering Timeline FX in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/021_TL_FX_Basics.mp4" length="15270425" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/021_TL_FX_Basics.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:35:06 GMT</pubDate>
<itunes:duration>6:29</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 22 - Getting Started - TimelineFX -Resize -->
<title>Getting Started - TimelineFX - Resize</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Using the Resize TimelineFX</itunes:subtitle>
<itunes:summary>This movie introduces Resize in Autodesk Smoke. This tool is used to mix resolutions in the sequence. Very useful for image size adjustment as well as pan and scanning.</itunes:summary>
<description>This movie introduces Resize in Autodesk Smoke. This tool is used to mix resolutions in the sequence. Very useful for image size adjustment as well as pan and scanning.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/022_TL_FX_Resize.mp4" length="17262836" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/022_TL_FX_Resize.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:39:12 GMT</pubDate>
<itunes:duration>5:12</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 23 - Getting Started - TimelineFX - Titling with Text -->
<title>Getting Started - TimelineFX - Titling</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Using the Text TimelineFX to create titles</itunes:subtitle>
<itunes:summary>This movie shows you how to do basic titling with a in Autodesk Smoke. </itunes:summary>
<description>This movie shows you how to do basic titling with a in Autodesk Smoke. </description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/023_TL_FX_text.mp4" length="19840795" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/023_TL_FX_text.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:41:16 GMT</pubDate>
<itunes:duration>6:26</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 24 - Getting Started - TimelineFX - Timewarp -->
<title>Getting Started - TimelineFX - Change Speed and Time Warps</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Change the speed of clips with Timewarping</itunes:subtitle>
<itunes:summary>This movie explains Time warping or Speed Change in Autodesk Smoke. You all examine the various methods such as constant time warp and variable speed changes as well as frame blending methods.</itunes:summary>
<description>This movie explains Time warping or Speed Change in Autodesk Smoke. You all examine the various methods such as constant time warp and variable speed changes as well as frame blending methods.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/024_TL_FX_Timewarp.mp4" length="18099772" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/024_TL_FX_Timewarp.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:43:28 GMT</pubDate>
<itunes:duration>5:31</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 25 - Getting Started - TimelineFX - Colour Correction -->
<title>Getting Started - Colour Correction</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Learn the Smoke colour Correction tools</itunes:subtitle>
<itunes:summary>This movie looks at colour correction in Autodesk Smoke. There is a brief overview of the tools as well as two workflows covering colour matching and secondary colour correction.</itunes:summary>
<description>This movie looks at colour correction in Autodesk Smoke. There is a brief overview of the tools as well as two workflows covering colour matching and secondary colour correction.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/025_TL_FX_CC.mp4" length="21830708" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/025_TL_FX_CC.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:45:11 GMT</pubDate>
<itunes:duration>7:45</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 26 - Getting Started - TimelineFX - Axis Basics -->
<title>Getting Started - TimelineFX Axis Basics</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introducing the Axis basic compositor in the sequence</itunes:subtitle>
<itunes:summary>This movie introduces you to timeline-based layer compositing using the Axis TimelineFX as well as keying with alpha channels in the sequence.</itunes:summary>
<description>This movie introduces you to timeline-based layer compositing using the Axis TimelineFX as well as keying with alpha channels in the sequence.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/026_TL_FX_Axis_Basics.mp4" length="25053332" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/026_TL_FX_Axis_Basics.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:47:24 GMT</pubDate>
<itunes:duration>8:10</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 27 - Getting Started - TimelineFX - Animation -->
<title>Getting Started - Working with Animation</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introducing the Animation tools in Smoke</itunes:subtitle>
<itunes:summary>This movie give you a brief introduction to some of the animation tools available in Autodesk Smoke.</itunes:summary>
<description>This movie give you a brief introduction to some of the animation tools available in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/027_TL_FX_Animation.mp4" length="23204372" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/027_TL_FX_Animation.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:49:26 GMT</pubDate>
<itunes:duration>10:38</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 28 - Getting Started - TimelineFX - Stabilising and Tracking -->
<title>Getting Started - Stabilising and Tracking in Axis</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Basics of Stabilising and Tracking in Smoke</itunes:subtitle>
<itunes:summary>This movie shows you how to do basic tracking and stabilisation directly in the sequence using Autodesk Smoke.</itunes:summary>
<description>This movie shows you how to do basic tracking and stabilisation directly in the sequence using Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/028_TL_FX_Track_Stabilize.mp4" length="20143634" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/028_TL_FX_Track_Stabilize.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:51:48 GMT</pubDate>
<itunes:duration>4:38</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 29 - Getting Started - TimelineFX - Keying in Axis -->
<title>Getting Started - TimelineFX Axis - Keying</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Basics of keying in the Axis TimelineFX</itunes:subtitle>
<itunes:summary>This movie shows you how to key using the Master Keyer in Autodesk Smoke. You also look at refining the key as well as basic roto-scoping and masking.</itunes:summary>
<description>This movie shows you how to key using the Master Keyer in Autodesk Smoke. You also look at refining the key as well as basic roto-scoping and masking.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/029_TL_FX_Keying.mp4" length="20346635" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/029_TL_FX_Keying.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:54:20 GMT</pubDate>
<itunes:duration>7:09</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 30 - Getting Started - The ConnectFX Workflow -->
<title>Getting Started - The ConnectFX Workfow</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Node Based Compositing in the Sequence</itunes:subtitle>
<itunes:summary>This movie introduces the world of Connect FX. This is node-based compositing available directly within the sequence. Have totally control over all your effects with this amazing toolset in Autodesk Smoke.</itunes:summary>
<description>This movie introduces the world of Connect FX. This is node-based compositing available directly within the sequence. Have totally control over all your effects with this amazing toolset in Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/030_TL_FX_ConnectFX.mp4" length="22705327" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/030_TL_FX_ConnectFX.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:56:40 GMT</pubDate>
<itunes:duration>10:20</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 31 - Getting Started - Action Overview - Part 1 -->
<title>Getting Started - Compositing with Action - Part 1</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introduction to the Action 3D Compositor</itunes:subtitle>
<itunes:summary>In Part 1, learn all about the 3D compositing environment including the media list, object menu and action schematic. You'll learn how to move objects in 3D space as well as bend image objects for added effect.</itunes:summary>
<description>In Part 1, learn all about the 3D compositing environment including the media list, object menu and action schematic. You'll learn how to move objects in 3D space as well as bend image objects for added effect.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/031_TL_FX_Action_P1.mp4" length="27763490" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/031_TL_FX_Action_P1.mp4</guid>
<pubDate>Thu, 09 Aug 2012 14:58:49 GMT</pubDate>
<itunes:duration>10:05</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 31 - Getting Started - Action Overview - Part 2 -->
<title>Getting Started - Compositing with Action - Part 2</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introduction to the Action 3D Compositor</itunes:subtitle>
<itunes:summary>In Part 2, learn how to import Photoshop files with their layers as well as 3D models in the 3D compositor. Concluding the overview will be basic lights, camera and render settings.</itunes:summary>
<description>In Part 2, learn how to import Photoshop files with their layers as well as 3D models in the 3D compositor. Concluding the overview will be basic lights, camera and render settings.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/031_TL_FX_Action_P2.mp4" length="30225237" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/031_TL_FX_Action_P2.mp4</guid>
<pubDate>Thu, 09 Aug 2012 15:00:28 GMT</pubDate>
<itunes:duration>10:41</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 32 - Getting Started - Working With Audio-->
<title>Getting Started - Working with Audio in Smoke</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Looking at TimelineFX and the Audiodesk in Smoke</itunes:subtitle>
<itunes:summary>This movie gives you a comprehensive explanation of the audio tools available in Autodesk Smoke. </itunes:summary>
<description>This movie gives you a comprehensive explanation of the audio tools available in Autodesk Smoke. </description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/032_Audio.mp4" length="31989528" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/032_Audio.mp4</guid>
<pubDate>Thu, 09 Aug 2012 15:03:56 GMT</pubDate>
<itunes:duration>11:01</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 33 - Getting Started - Exporting-->
<title>Getting Started - Exporting Your Work</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Create Exports From Autodesk Smoke</itunes:subtitle>
<itunes:summary>We look at the final task of exporting your work from Autodesk Smoke.</itunes:summary>
<description>We look at the final task of exporting your work from Autodesk Smoke.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/033_Export.mp4" length="11703796" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/033_Export.mp4</guid>
<pubDate>Thu, 09 Aug 2012 15:08:43 GMT</pubDate>
<itunes:duration>5:29</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 34 - The Tools Tab-->
<title>The Tools Tab</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introduction to the Desktop Tools in Smoke</itunes:subtitle>
<itunes:summary>This movie introduces the desktop tools and the workflow when using the tools. Creative and Utility functions available in the tools tab.</itunes:summary>
<description>This movie introduces the desktop tools and the workflow when using the tools. Creative and Utility functions available in the tools tab.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/034_Desktop_Tools.mp4" length="17893980" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/034_Desktop_Tools.mp4</guid>
<pubDate>Thu, 09 Aug 2012 15:13:58 GMT</pubDate>
<itunes:duration>5:59</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 35 - Paint - Introdauction-->
<title>Paint - Introduction</title>
<itunes:author>Autodesk</itunes:author>
<itunes:subtitle>Introducing Paint in the Tools Tab</itunes:subtitle>
<itunes:summary>This movie is an introduction to the paint tool available via the tools tab. A quick examination of the interface and brief painting introduction.</itunes:summary>
<description>This movie is an introduction to the paint tool available via the tools tab. A quick examination of the interface and brief painting introduction.</description>
<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/035_Paint_Introduction.mp4" length="15445662" type="video/mp4" />
<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/035_Paint_Introduction.mp4</guid>
<pubDate>Thu, 09 Aug 2012 15:16:05 GMT</pubDate>
<itunes:duration>5:39</itunes:duration>
<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 36 - The Conform Workflow-->
	<title>The Conform Workflow</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Introducing the Conform Workflow</itunes:subtitle>
	<itunes:summary>Introduction to the conform workflow in Autodesk Smoke 2013</itunes:summary>
	<description>Introduction to the conform workflow in Autodesk Smoke 2013</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/036_Conform_Workflow.mp4" length="15345378" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/036_Conform_Workflow.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:17:21 GMT</pubDate>
	<itunes:duration>00:07:35</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 37 - Relative Path Conform-->
	<title>Relative Path Conform</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Conforming Sequences with relocated media</itunes:subtitle>
	<itunes:summary>Rebuild sequences in Smoke on a different system and the media has been moved to a new location</itunes:summary>
	<description>Rebuild sequences in Smoke on a different system and the media has been moved to a new location</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/037_Relative_Conform.mp4" length="14648208" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/037_Relative_Conform.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:20:40 GMT</pubDate>
	<itunes:duration>00:06:24</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 38 - The Conform Challenge-->
	<title>The Conform Challenge</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Conform a sequence with multiple challenges</itunes:subtitle>
	<itunes:summary>Rebuild a sequence at a different resolution with multiple formats, resolutions and media locations.</itunes:summary>
	<description>Rebuild a sequence at a different resolution with multiple formats, resolutions and media locations.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/038_Conform_Challenge.mp4" length="25468932" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/038_Conform_Challenge.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:23:29 GMT</pubDate>
	<itunes:duration>00:11:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 39 - Vectorscope and Waveform monitor-->
	<title>Vectorscope and Waveform Monitor</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Access the Vectorscope and Waveform Monitor in Smoke</itunes:subtitle>
	<itunes:summary>Learn to locate the Vectorscope and Waveform monitor in Autodesk Smoke.</itunes:summary>
	<description>Learn to locate the Vectorscope and Waveform monitor in Autodesk Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/039_Vectorscope_Waveform.mp4" length="28650245" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/039_Vectorscope_Waveform.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:26:32 GMT</pubDate>
	<itunes:duration>00:05:54</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 40 - Searching the Sequence-->
	<title>Searching the Sequence</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Search and locate clips in your sequence</itunes:subtitle>
	<itunes:summary>Use the search tool to find clips and elements in your sequence through a variety of search criteria</itunes:summary>
	<description>Use the search tool to find clips and elements in your sequence through a variety of search criteria</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/040_Searching_Sequence.mp4" length="10404148" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/040_Searching_Sequence.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:28:42 GMT</pubDate>
	<itunes:duration>00:03:39</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 41 - The CFX clip-->
	<title>The ConnectFX Clip</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to use the CFX clip in ConnectFX</itunes:subtitle>
	<itunes:summary>Introducing the CFX clip, great for disk caching in your compositing tree as well as versioning and presets</itunes:summary>
	<description>Introducing the CFX clip, great for disk caching in your compositing tree as well as versioning and presets</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/041_ConnectFX_Clip.mp4" length="21384160" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/041_ConnectFX_Clip.mp4</guid>
	<pubDate>Fri, 24 Aug 2012 16:32:20 GMT</pubDate>
	<itunes:duration>00:07:58</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 42 - J K L Editing Workflow-->
	<title>The J K L Editing Workflow</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Discover the traditional J K and L method of editing in Smoke</itunes:subtitle>
	<itunes:summary>Autodesk Smoke provides the traditional J K and L editing workflow similar to other NLEs.  Easy to learn and quick to get started</itunes:summary>
	<description>Autodesk Smoke provides the traditional J K and L editing workflow similar to other NLEs.  Easy to learn and quick to get started</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/042_jkl_editing_workflow.mp4" length="15416609" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/042_jkl_editing_workflow.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:01:45 GMT</pubDate>
	<itunes:duration>00:02:57</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 43 - Navigating a Selection-->
	<title>Navigating a Selection</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Navigate the sequence with selected segments</itunes:subtitle>
	<itunes:summary>Learn to move around the Smoke sequence by selecting segments for extremely fast navigation</itunes:summary>
	<description>Learn to move around the Smoke sequence by selecting segments for extremely fast navigation</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/043_navigating_selection.mp4" length="10903958" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/043_navigating_selection.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:06:04 GMT</pubDate>
	<itunes:duration>00:02:51</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 44 - Collapsing the FX pipeline-->
	<title>Collapsing the FX Pipeline</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Maximize the UI by collapsing the FX Pipeline</itunes:subtitle>
	<itunes:summary>Mae better use of the Smoke interface when not performing FX work by collapsing the FX Pipeline</itunes:summary>
	<description>Mae better use of the Smoke interface when not performing FX work by collapsing the FX Pipeline</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/044_collapsefx.mp4" length="11446337" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/044_collapsefx.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:10:26 GMT</pubDate>
	<itunes:duration>00:03:41</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 45 - Compare your Off-line to On-line Edit-->
	<title>Off-Line to On-Line Comparison</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compare your off-line edit to your on-line conform in Smoke</itunes:subtitle>
	<itunes:summary>Matching edits from other NLEs can be tricky.  Use the Autodesk Smoke off-line to on-line comparison technique to ensure your edits are frame accurate.</itunes:summary>
	<description>Matching edits from other NLEs can be tricky.  Use the Autodesk Smoke off-line to on-line comparison technique to ensure your edits are frame accurate.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/045_compare_online2offline.mp4" length="23664678" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/045_compare_online2offline.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:13:05 GMT</pubDate>
	<itunes:duration>00:05:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 46 - Project Sharing-->
	<title>Sharing Media between Projects</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to share media between projects in Smoke</itunes:subtitle>
	<itunes:summary>Smoke's project management allows you to share media between projects on local and network systems.  This example focuses on sharing media between two projects on the same machine</itunes:summary>
	<description>Smoke's project management allows you to share media between projects on local and network systems.  This example focuses on sharing media between two projects on the same machine</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/046_project_sharing.mp4" length="15989000" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/046_project_sharing.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:15:39 GMT</pubDate>
	<itunes:duration>00:04:15</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 47 - Create Project Archive-->
	<title>Back up your with the the Project Archive</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to create project archives to bad up your production</itunes:subtitle>
	<itunes:summary>Project backups or archiving is essential to preserve your work in Autodesk Smoke.  Learn to create a reject backup because you'll never know when you need it!</itunes:summary>
	<description>Project backups or archiving is essential to preserve your work in Autodesk Smoke.  Learn to create a reject backup because you'll never know when you need it!</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/047_creating_project_archive.mp4" length="16724077" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/047_creating_project_archive.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:18:23 GMT</pubDate>
	<itunes:duration>00:06:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 48 - Restore Project Archive-->
	<title>Restoring a Project Archive</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to restore a Project that was archived</itunes:subtitle>
	<itunes:summary>Need to update an existing project or make a new version.  If you make a project archive, you can restore your production as it was and make your changes.  It's great to always have a backup!</itunes:summary>
	<description>Need to update an existing project or make a new version.  If you make a project archive, you can restore your production as it was and make your changes.  It's great to always have a backup!</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/048_restore_project.mp4" length="12701467" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/048_restore_project.mp4</guid>
	<pubDate>Tue, 25 Sep 2012 10:21:15 GMT</pubDate>
	<itunes:duration>00:03:56</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 49 - Exporting Media-->
	<title>Exporting Media</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to Export Media from Smoke 2013 (including AAF Export)</itunes:subtitle>
	<itunes:summary>Export media or AAFs using the Smoke export window, full of presets and customisations</itunes:summary>
	<description>Export media or AAFs using the Smoke export window, full of presets and customisations</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/049_exporting_media.m4v" length="21496660" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/049_exporting_media.m4v</guid>
	<pubDate>Thu, 27 Sep 2012 10:21:29 GMT</pubDate>
	<itunes:duration>00:05:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 50 - HOT TIP: Dealing with Gamma Shifting-->
	<title>HOT TIP: Dealing with Gamma Shifting - Headroom anyone?</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Quick tip to deal with gamma issues when importing QuickTime files</itunes:subtitle>
	<itunes:summary>This quick 2 minute HOT TIP focuses on the QuickTime gamma shifting that you can encounter in Smoke.  Use the handy HEADROOM option to control how the colour is managed in the QuickTime files to correctly display your pictures.</itunes:summary>
	<description>This quick 2 minute HOT TIP focuses on the QuickTime gamma shifting that you can encounter in Smoke.  Use the handy HEADROOM option to control how the colour is managed in the QuickTime files to correctly display your pictures.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/050_ht_qt_gamma.mp4" length="21301477" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/050_ht_qt_gamma.mp4</guid>
	<pubDate>Wed, 10 Oct 2012 20:44:44 GMT</pubDate>
	<itunes:duration>00:02:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 51 - HOT TIP: Navigating the Grade-->
	<title>HOT TIP: Navigating the Grade</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to navigate your graded segments without leaving the colour correction tools</itunes:subtitle>
	<itunes:summary>This quick 2 minute HOT TIP focuses on using a great shortcut to help you move between colour corrected shots in the sequence without having to exit your colour correction editor. Allows you to move faster between shot to shot colour grading.</itunes:summary>
	<description>This quick 2 minute HOT TIP focuses on using a great shortcut to help you move between colour corrected shots in the sequence without having to exit your colour correction editor. Allows you to move faster between shot to shot colour grading.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/051_ht_navigatingthegrade.m4v" length="24334026" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/051_ht_navigatingthegrade.m4v</guid>
	<pubDate>Fri, 12 Oct 2012 15:39:08 GMT</pubDate>
	<itunes:duration>00:02:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 52 - Pre-Processing: Import Settings in the Sequence-->
	<title>Pre-Processing - Import Settings in the Sequence - Part 1</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 1 - This video introduced the concept known as PRE-PROCESSING in Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>This is the ability for you to adjust your media's import settings even though you have already imported the clip into Smoke and edited into a sequence.</itunes:summary>
	<description>This is the ability for you to adjust your media's import settings even though you have already imported the clip into Smoke and edited into a sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/052_pre_processing_p1.m4v" length="20530286" type="Video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/052_pre_processing_p1.m4v</guid>
	<pubDate>Fri, 19 Oct 2012 12:36:21 GMT</pubDate>
	<itunes:duration>00:04:53</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 53 - Pre-Processing: Pre-Processing in CFX-->
	<title>Pre-Processing - Using Pre-Processing with ConnectFX - Part 2</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 2 - This video shows you how to work with PRE-PROCESSING when working with the ConnectFX node based compositing tools.</itunes:subtitle>
	<itunes:summary>Learn how to access the settings as well as the implications and workflows that you need to do in order to work correct with pre-processing in ConnectFX.</itunes:summary>
	<description>Learn how to access the settings as well as the implications and workflows that you need to do in order to work correct with pre-processing in ConnectFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/053_pre_processing_p2.m4v" length="16768343" type="Video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/053_pre_processing_p2.m4v</guid>
	<pubDate>Fri, 19 Oct 2012 12:39:39 GMT</pubDate>
	<itunes:duration>00:03:50</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 54 - Saving a node in connectfx or action-->
	<title>HOT TIP: Saving a Node in ConnectFX and Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to save individual settings in ConnectFX instead of the whole effects tree</itunes:subtitle>
	<itunes:summary>This quick 2 minute HOT TIP focuses how to save individual nodes in ConnectFX as well as Action.  So if you want to save a specific node in connectFX or a part of your Action 3D composite, than this tip will show you how to do it.</itunes:summary>
	<description>This quick 2 minute HOT TIP focuses how to save individual nodes in ConnectFX as well as Action.  So if you want to save a specific node in connectFX or a part of your Action 3D composite, than this tip will show you how to do it.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/054_ht_save_a_node.m4v" length="15022681" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/054_ht_save_a_node.m4v</guid>
	<pubDate>Fri, 26 Oct 2012 13:25:40 GMT</pubDate>
	<itunes:duration>00:02:27</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 55 - Contextual views in ConnectFX-->
	<title>HOT TIP: Getting Context in ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to use contextual views in ConnectFX for the overall picture</itunes:subtitle>
	<itunes:summary>This quick 2 minute HOT TIP focuses on how to set up contextual views so you can view different aspects of your composite including the overall result.</itunes:summary>
	<description>This quick 2 minute HOT TIP focuses on how to set up contextual views so you can view different aspects of your composite including the overall result.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/055_ht_setting_context_in_connectfx.m4v" length="18477982" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/055_ht_setting_context_in_connectfx.m4v</guid>
	<pubDate>Fri, 02 Nov 2012 13:47:44 GMT</pubDate>
	<itunes:duration>00:02:34</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 56 - Copy Animation Curves-->
	<title>HOT TIP: Copying Animation Curves Between Transitions</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>See how to copy your transition animation curve to multiple transitions in the sequence</itunes:subtitle>
	<itunes:summary>Normally you can select multiple transitions and adjust their duration and blending altogether.  But this has never been the case with animation curves types like linear or S-shaped curves.   This user tip shows how it is possible using a different method.</itunes:summary>
	<description>Normally you can select multiple transitions and adjust their duration and blending altogether.  But this has never been the case with animation curves types like linear or S-shaped curves.   This user tip shows how it is possible using a different method.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/056_ht_copy_anim_curves.m4v" length="18383858" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/056_ht_copy_anim_curves.m4v</guid>
	<pubDate>Fri, 09 Nov 2012 12:18:25 GMT</pubDate>
	<itunes:duration>00:02:35</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 57 - Alpha Introduction-->
	<title>Alpha - Part 1 - Introduction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Introduction to the Alpha Channel with Smoke Learning Channel</itunes:subtitle>
	<itunes:summary>Part 1 - This is the introduction to dealing with using Alpha Channels in Autodesk Smoke.  

This video gives an overview on about the alpha channel in an image with detailed explanations.</itunes:summary>
	<description>Part 1 - This is the introduction to dealing with using Alpha Channels in Autodesk Smoke.  

This video gives an overview on about the alpha channel in an image with detailed explanations.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/057_alpha_intro.m4v" length="27809669" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/057_alpha_intro.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:33:17 GMT</pubDate>
	<itunes:duration>00:03:42</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 58 - Import with Alpha-->
	<title>Alpha - Part 2 - Importing with Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>How to import files with Alpha</itunes:subtitle>
	<itunes:summary>Part 2 - This videos shows you how to import files with their associated alpha channels.

This deals with concepts such as embedded alpha, separate passes and matte containers.</itunes:summary>
	<description>Part 2 - This videos shows you how to import files with their associated alpha channels.

This deals with concepts such as embedded alpha, separate passes and matte containers.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/058_import_with_alpha.m4v" length="16671879" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/058_import_with_alpha.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:35:42 GMT</pubDate>
	<itunes:duration>00:04:41</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 59 - Keying Alpha in the sequence-->
	<title>Alpha - Part 3 - Keying Alpha in the Sequence</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn to use Alphas in the sequence</itunes:subtitle>
	<itunes:summary>Part 3 - After importing your files with alpha into Smoke, you can now composite them on layers in the sequence.

This video shows you how to composite with the Axis Timeline FX with and without matte containers. </itunes:summary>
	<description>Part 3 - After importing your files with alpha into Smoke, you can now composite them on layers in the sequence.

This video shows you how to composite with the Axis Timeline FX with and without matte containers. </description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/059_keying_alphas_in_sequence.m4v" length="21553617" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/059_keying_alphas_in_sequence.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:37:44 GMT</pubDate>
	<itunes:duration>00:04:43</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 60 - Matte Containers Exploded-->
	<title>Alpha - Part 4 - Matte Containers Exploded</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Dive into the working of the Matte Container</itunes:subtitle>
	<itunes:summary>Part 4 - This video goes through the explanation of how a matte container works in Autodesk Smoke.  

This includes explanations about version, primary and secondary video streams as well as shows the benefit of the matte container in your workflow.</itunes:summary>
	<description>Part 4 - This video goes through the explanation of how a matte container works in Autodesk Smoke.  

This includes explanations about version, primary and secondary video streams as well as shows the benefit of the matte container in your workflow.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/060_matte_containers_exploded.m4v" length="24597257" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/060_matte_containers_exploded.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:39:47 GMT</pubDate>
	<itunes:duration>00:05:50</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 61 - Text and the RGBA option-->
	<title>Alpha - Part 5 - Text and the RGBA Option</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Use text with internally generated Alpha in the Sequence</itunes:subtitle>
	<itunes:summary>Part 5 - Goes through an example of how alpha works with 2D text in the sequence.

Basic example of how to put a title on a background as well as how to do to basic 3D compositing in the sequence using the RGBA text option.</itunes:summary>
	<description>Part 5 - Goes through an example of how alpha works with 2D text in the sequence.

Basic example of how to put a title on a background as well as how to do to basic 3D compositing in the sequence using the RGBA text option.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/061_text_rgba_option.m4v" length="37600186" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/061_text_rgba_option.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:42:15 GMT</pubDate>
	<itunes:duration>00:04:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 62 - Taking alpha into ConnectFX-->
	<title>Alpha - Part 6 - Taking Alpha into ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Go from the sequence to ConnectFX nodes with alpha</itunes:subtitle>
	<itunes:summary>Part 6 - shows you how to transform your composites from layer based compositing to node based compositing and how that impacts on the alpha channel.

Examples include converting matte containers to clips in ConnectFX, working with single passes in CFX.</itunes:summary>
	<description>Part 6 - shows you how to transform your composites from layer based compositing to node based compositing and how that impacts on the alpha channel.

Examples include converting matte containers to clips in ConnectFX, working with single passes in CFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/062_taking_alphas_into_connectFX.m4v" length="27043259" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/062_taking_alphas_into_connectFX.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:44:44 GMT</pubDate>
	<itunes:duration>00:07:10</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 63 - ConnectFX nodes and Alpha-->
	<title>Alpha - Part 7 - ConnectFX Nodes and Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how alpha flows in ConnectFX</itunes:subtitle>
	<itunes:summary>Part 7 - shows the INs and OUTs of the Alpha channel through the ConnectFX nodes.

Explanations of how alpha flows through a node based composite and demonstrates two examples.
</itunes:summary>
	<description>Part 7 - shows the INs and OUTs of the Alpha channel through the ConnectFX nodes.

Explanations of how alpha flows through a node based composite and demonstrates two examples.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/063_nodes_and_alpha.m4v" length="29822694" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/063_nodes_and_alpha.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:47:22 GMT</pubDate>
	<itunes:duration>00:06:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 64 - Alpha out of action-->
	<title>Alpha - Part 8 - Getting Alpha out of Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to set up Alpha outputs from Action</itunes:subtitle>
	<itunes:summary>Part 8 - unlike all the other nodes in ConnectFX, action can have as many outputs as you want.  Learn to create an alpha output from action for further compositing.

Also learn how expose every output out of action in ConnectFX</itunes:summary>
	<description>Part 8 - unlike all the other nodes in ConnectFX, action can have as many outputs as you want.  Learn to create an alpha output from action for further compositing.

Also learn how expose every output out of action in ConnectFX</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/064_alpha_out_of_action.m4v" length="31621230" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/064_alpha_out_of_action.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:49:17 GMT</pubDate>
	<itunes:duration>00:05:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 65 - Straight vs premultiply alpha-->
	<title>Alpha - Part 9 - Straight Alpha vs Premultiplied Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn the different Alpha types and how to use them in Smoke</itunes:subtitle>
	<itunes:summary>Part 9 - This video gives an explanation of Straight Alpha and Premultiplied Alpha and their differences.  

You also see how to composite the two types of alphas and the issues they can create and how to deal with them in Autodesk Smoke.
</itunes:summary>
	<description>Part 9 - This video gives an explanation of Straight Alpha and Premultiplied Alpha and their differences.  

You also see how to composite the two types of alphas and the issues they can create and how to deal with them in Autodesk Smoke.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/065_straight_vs_premult.m4v" length="39122840" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/065_straight_vs_premult.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:52:15 GMT</pubDate>
	<itunes:duration>00:07:20</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 66 - Layering ConnectFX in Sequence-->
	<title>Alpha - Part 10 - Layer Compositing with ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to get alpha out of ConnectFX and into the sequence</itunes:subtitle>
	<itunes:summary>Part 10 - Get alphas out of ConnectFX and back into the sequence for layer compositing.

Examine the workflow of separating your graphics from your background.  Great for promo versioning and changing editorial without damaging the graphics composition.
</itunes:summary>
	<description>Part 10 - Get alphas out of ConnectFX and back into the sequence for layer compositing.

Examine the workflow of separating your graphics from your background.  Great for promo versioning and changing editorial without damaging the graphics composition.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/066_layer_compositing_with_connectFX.m4v" length="29674804" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/066_layer_compositing_with_connectFX.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:54:57 GMT</pubDate>
	<itunes:duration>00:03:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 67 - Exporting with Alpha-->
	<title>Alpha - Part 11 - Exporting with Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to export files with embedded Alpha</itunes:subtitle>
	<itunes:summary>Part 11 - Learn how to export files out of Autodesk Smoke with their alpha embedded in the exported media.

See the workflow to recreate matte containers and export that out as an image sequence with an embedded alpha.</itunes:summary>
	<description>Part 11 - Learn how to export files out of Autodesk Smoke with their alpha embedded in the exported media.

See the workflow to recreate matte containers and export that out as an image sequence with an embedded alpha.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/067_exporting_with_alpha.m4v" length="15234866" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/067_exporting_with_alpha.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 09:56:56 GMT</pubDate>
	<itunes:duration>00:03:59</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 68 - Exporting ConnectFX with Alpha-->
	<title>Alpha - Part 12 - Exporting ConnectFX with Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to export a CFX composition with its Alpha</itunes:subtitle>
	<itunes:summary>Part 12 - Export out a ConnectFX composite with its alpha channel in the final video of the series. 

This workflow shows you how to work with Smoke be able to get these composites exported out.</itunes:summary>
	<description>Part 12 - Export out a ConnectFX composite with its alpha channel in the final video of the series. 

This workflow shows you how to work with Smoke be able to get these composites exported out.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/068_exporting_connectfx_alpha.m4v" length="24490252" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/068_exporting_connectfx_alpha.m4v</guid>
	<pubDate>Mon, 26 Nov 2012 10:02:10 GMT</pubDate>
	<itunes:duration>00:04:46</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 69 - Setting Up a new Storage Volume-->
	<title>Smoke on Location: Setting up a new Storage Volume</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Set up a new Storage Volume to take Smoke on a location shoot</itunes:subtitle>
	<itunes:summary>Autodesk Smoke can have multiple Media Storage Volumes to handle its media.   You set up storage for you main work but you can also set up a portable drive for on-site work as well.

This video shows you how to set up a portable drive for Smoke.</itunes:summary>
	<description>Autodesk Smoke can have multiple Media Storage Volumes to handle its media.   You set up storage for you main work but you can also set up a portable drive for on-site work as well.

This video shows you how to set up a portable drive for Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/069_multiple_partitans001.m4v" length="26266507" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/069_multiple_partitans001.m4v</guid>
	<pubDate>Tue, 08 Jan 2013 19:59:01 GMT</pubDate>
	<itunes:duration>00:06:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 70 - Copying between Storage Volumes-->
	<title>Smoke on Location: Copying between Storage Volumes</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Copy footage from your portable drive to your main storage</itunes:subtitle>
	<itunes:summary>When returning from working on location, you can copy all your media using the MediaHub from the portable drive to the main storage.  This allows Smoke to work faster and be more efficient.</itunes:summary>
	<description>When returning from working on location, you can copy all your media using the MediaHub from the portable drive to the main storage.  This allows Smoke to work faster and be more efficient.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/070_multiple_partitans002.m4v" length="24068051" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/070_multiple_partitans002.m4v</guid>
	<pubDate>Tue, 08 Jan 2013 20:03:25 GMT</pubDate>
	<itunes:duration>00:05:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 71 - White Balancing Your Shot-->
	<title>White Balancing Your Shot </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn how to white balance a shot using the colour warper in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>In this video, you learn how to use the colour warper and vectorscope in ConnectFX to white balance a shot.</itunes:summary>
	<description>In this video, you learn how to use the colour warper and vectorscope in ConnectFX to white balance a shot.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/071_white_balance.m4v" length="26687250" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/071_white_balance.m4v</guid>
	<pubDate>Tue, 15 Jan 2013 12:51:06 GMT</pubDate>
	<itunes:duration>00:03:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 72 - Create Rolling Backgrounds with Action-->
	<title>Create Rolling Backgrounds with Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Use Action's texture tools to make a rolling background from a static image</itunes:subtitle>
	<itunes:summary>In this video, you learn how to create a rolling background from a static image.We will make use of a layered Photoshop file, the action 3D compositor and texturing tools.  Detailed explanations of how it works as well as touch on some animation tips.
</itunes:summary>
	<description>n this video, you learn how to create a rolling background from a static image.We will make use of a layered Photoshop file, the action 3D compositor and texturing tools.  Detailed explanations of how it works as well as touch on some animation tips.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/072_rolling_backgrounds_action.m4v" length="39256558" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/072_rolling_backgrounds_action.m4v</guid>
	<pubDate>Fri, 25 Jan 2013 16:16:01 GMT</pubDate>
	<itunes:duration>00:08:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 73 - Mocha Pro 2 Smoke - Tracking Data-->
	<title>Mocha to Smoke Interoperability - Part 1 - Tracking Data</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series focuses on the interoperability between Mocha Pro and Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In this video, you learn how to set up a planar surface in Mocha Pro which is exported as tracking data to Autodesk Smoke.  This data is used to 4-point track commonly known as logo insertion or pack short replacement.</itunes:summary>
	<description>In this video, you learn how to set up a planar surface in Mocha Pro which is exported as tracking data to Autodesk Smoke.  This data is used to 4-point track commonly known as logo insertion or pack short replacement.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/073_mocha_interop_p1.m4v" length="61456865" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/073_mocha_interop_p1.m4v</guid>
	<pubDate>Tue, 29 Jan 2013 23:43:33 GMT</pubDate>
	<itunes:duration>00:07:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 74 - Mocha Pro 2 Smoke - Masking Data-->
	<title>Mocha to Smoke Interoperability - Part 2 - Masking Data</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series focuses on the interoperability between Mocha Pro and Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In this video, you learn how to export a mask that was rotoscoped in Mocha Pro and import it into the Gmask node to assist with the main compositing task in Autodesk Smoke.</itunes:summary>
	<description>In this video, you learn how to export a mask that was rotoscoped in Mocha Pro and import it into the Gmask node to assist with the main compositing task in Autodesk Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/074_mocha_interop_p2.mp4" length="60290982" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/074_mocha_interop_p2.mp4</guid>
	<pubDate>Tue, 29 Jan 2013 23:46:06 GMT</pubDate>
	<itunes:duration>00:04:43</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 75 - Mocha Pro 2 Smoke - 3D Camera Tracking Data-->
	<title>Mocha to Smoke Interoperability - Part 3 - 3D Camera Tracking Data</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series focuses on the interoperability between Mocha Pro and Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In the final video, you learn how to solve and export a 3D camera move from Mocha Pro into Smoke.  Next you composite a 3D model into the shot using the 3D camera data to match the the original background movement.</itunes:summary>
	<description>In the final video, you learn how to solve and export a 3D camera move from Mocha Pro into Smoke.  Next you composite a 3D model into the shot using the 3D camera data to match the the original background movement.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/075_mocha_interop_p3.mp4" length="98723974" type="video/mp4" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/075_mocha_interop_p3.mp4</guid>
	<pubDate>Tue, 29 Jan 2013 23:48:20 GMT</pubDate>
	<itunes:duration>00:10:11</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 76 - Upscaling Your RED Sequences - Part 1 - Upscaling An Edit-->
	<title>Upscaling Your RED Sequences - Part 1 - Upscaling An Edit</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Videos on projects using RED Media and the workflow of working at a small debayer setting and ultimately upscaling to a much high debayer setting for finishing.</itunes:subtitle>
	<itunes:summary>Part 1 focuses on scaling up a sequence that contains the editorial and basic timeline effects in the sequence. </itunes:summary>
	<description>Part 1 focuses on scaling up a sequence that contains the editorial and basic timeline effects in the sequence. </description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/076_red_upscale_p1.m4v" length="84548048" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/076_red_upscale_p1.m4v</guid>
	<pubDate>Thu, 07 Feb 2013 23:09:30 GMT</pubDate>
	<itunes:duration>00:09:31</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 77 - Upscaling Your RED Sequences - Part 2 - Upscaling and ConnectFX-->
	<title>Upscaling Your RED Sequences - Part 2 - Upscaling and ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Videos on projects using RED Media and the workflow of working at a small debayer setting and ultimately upscaling to a much high debayer setting for finishing.</itunes:subtitle>
	<itunes:summary>Part 2 focuses on the challenge of dealing with ConnectFX if they were created at a small debayer setting and now they are upscaled to a larger debayer setting.  Very useful to know what happens and how to do the manual adjustments in ConnectFX.</itunes:summary>
	<description>Part 2 focuses on the challenge of dealing with ConnectFX if they were created at a small debayer setting and now they are upscaled to a larger debayer setting.  Very useful to know what happens and how to do the manual adjustments in ConnectFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/077_red_upscale_cfx_p2.m4v" length="81319803" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/077_red_upscale_cfx_p2.m4v</guid>
	<pubDate>Thu, 07 Feb 2013 23:13:36 GMT</pubDate>
	<itunes:duration>00:09:14</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 78 - The Modular Keyer - Part 1 - Introduction-->
	<title>Modular Keyer - Part 1 - Introduction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 1 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 1 introduces the modular keyer and some of the basic concepts and workflows.  Also included is recommended setting up and keyboard shortcuts.</itunes:summary>
	<description>Part 1 introduces the modular keyer and some of the basic concepts and workflows.  Also included is recommended setting up and keyboard shortcuts.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/078_modular_keyer_part001.m4v" length="62582480" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/078_modular_keyer_part001.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 16:53:48 GMT</pubDate>
	<itunes:duration>00:07:06</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 79 - The Modular Keyer - Part 2 - Basic Example-->
	<title>Modular Keyer - Part 2 - Basic Example</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 2 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 2 goes through a basic example from beginning to end using the modular keyer.  Just using the standard setup, you'll learn how to key and refine a chroma key task.</itunes:summary>
	<description>Part 2 goes through a basic example from beginning to end using the modular keyer.  Just using the standard setup, you'll learn how to key and refine a chroma key task.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/079_modular_keyer_part002.m4v" length="83493195" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/079_modular_keyer_part002.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 16:56:17 GMT</pubDate>
	<itunes:duration>00:09:27</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 80 - The Modular Keyer - Part 3 - Dealing with a challenging key-->
	<title>Modular Keyer - Part 3 - Dealing with a challenging key</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 3 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 3 introduces a new challenging example where a two key pass is required to correctly separate the talent from the green screen.  This part focuses on creating the hard edge matte for the first key pass.</itunes:summary>
	<description>Part 3 introduces a new challenging example where a two key pass is required to correctly separate the talent from the green screen.  This part focuses on creating the hard edge matte for the first key pass.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/080_modular_keyer_part003.m4v" length="58052841" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/080_modular_keyer_part003.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 16:58:50 GMT</pubDate>
	<itunes:duration>00:06:23</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 81 - The Modular Keyer - Part 4 - The Matte Blend Node-->
	<title>Modular Keyer - Part 4 - The Matte Blend Node</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 4 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 4 carries on pulling a chroma key with a challenging green screen.  You are introduced to the Matte Blend Node to combine multiple mattes together and you also pull the second key pass for the soft edge key. </itunes:summary>
	<description>Part 4 carries on pulling a chroma key with a challenging green screen.  You are introduced to the Matte Blend Node to combine multiple mattes together and you also pull the second key pass for the soft edge key. </description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/081_modular_keyer_part004.m4v" length="63512904 " type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/081_modular_keyer_part004.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 17:01:50 GMT</pubDate>
	<itunes:duration>00:07:01</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 82 - The Modular Keyer - Part 5 - Colours, Edge and Pixel Spread-->
	<title>Modular Keyer - Part 5 - Colours, Edge and Pixel Spread</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 5 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 5 moves away from alphas and mattes and starts dealing with colour issues like colour suppression.  You also use the Pixel Spread node to repair edges caused by the keying process.   This concludes this challenging keying example.</itunes:summary>
	<description>Part 5 moves away from alphas and mattes and starts dealing with colour issues like colour suppression.  You also use the Pixel Spread node to repair edges caused by the keying process.   This concludes this challenging keying example.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/082_modular_keyer_part005.m4v" length="68644538 " type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/082_modular_keyer_part005.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 17:04:32 GMT</pubDate>
	<itunes:duration>00:07:40</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 83 - The Modular Keyer - Part 6 - Workflow Gotchas-->
	<title>Modular Keyer - Part 6 - Workflow Gotchas</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 6 of 6 - videos teaching the workflows and features of the Modular Keyer</itunes:subtitle>
	<itunes:summary>Part 6 concludes the modular keyer series with a compilation of workflow "gotchas".  These are potential issues you may encounter using the modular keyer and you learn to address them.  Some you have seen before and some you have not.</itunes:summary>
	<description>Part 6 concludes the modular keyer series with a compilation of workflow "gotchas".  These are potential issues you may encounter using the modular keyer and you learn to address them.  Some you have seen before and some you have not.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/083_modular_keyer_part006.m4v" length="65362592" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/083_modular_keyer_part006.m4v</guid>
	<pubDate>Tue, 19 Feb 2013 17:07:31 GMT</pubDate>
	<itunes:duration>00:07:23</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 84 - Hot Tips: Editing with Sync Locks-->
	<title>Hot Tip: Editing with Sync Locks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Insert editing with Sync Locks to keep things in Sync</itunes:subtitle>
	<itunes:summary>This quick 2 minute HOT TIP shows you how to do insert editing into your sequence with a video only source but still keep sync with the audio.  Experience the SYNC LOCKS.</itunes:summary>
	<description>This quick 2 minute HOT TIP shows you how to do insert editing into your sequence with a video only source but still keep sync with the audio.  Experience the SYNC LOCKS.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/084_ht_keeping_in_sync.m4v" length="11826833" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/084_ht_keeping_in_sync.m4v</guid>
	<pubDate>Wed, 27 Feb 2013 16:38:17 GMT</pubDate>
	<itunes:duration>00:01:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 85 - Selecting in the Sequence-->
	<title>Selecting in the Sequence</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>All the methods of selecting in the Smoke sequence.</itunes:subtitle>
	<itunes:summary>This video shows all the methods of selecting in the Smoke sequence.

From within the timeline view, you have point click selection, positioner selection and rectangular selection.

An essential watch with workflows, tips and keyboard shortcuts.</itunes:summary>
	<description>This video shows all the methods of selecting in the Smoke sequence.

From within the timeline view, you have point click selection, positioner selection and rectangular selection.

An essential watch with workflows, tips and keyboard shortcuts.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/085_selecting_in_sequence.m4v" length="46809943" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/085_selecting_in_sequence.m4v</guid>
	<pubDate>Tue, 05 Mar 2013 16:57:20 GMT</pubDate>
	<itunes:duration>00:05:24</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 86 - Paint Introduction-->
	<title>Paint Introduction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Introducing the Paint Tools available in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video is an introductory primer to the paint tools available in Autodesk Smoke.

You will look at what types of tools are available, when to use them, how they work and which one to choose.</itunes:summary>
	<description>This video is an introductory primer to the paint tools available in Autodesk Smoke.

You will look at what types of tools are available, when to use them, how they work and which one to choose.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/086_paint_intro.m4v" length="32194384" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/086_paint_intro.m4v</guid>
	<pubDate>Thu, 14 Mar 2013 17:26:43 GMT</pubDate>
	<itunes:duration>00:03:32</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 87 - Desktop Paint: Basics & Concepts-->
	<title>Desktop Paint: Basics and Concepts</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Introducing the Desktop Paint basics and concepts</itunes:subtitle>
	<itunes:summary>This video gets you up and running with the basics and concepts of the Desktop Paint.  

Learn about the workflow, tool basics and a few tips along the way.</itunes:summary>
	<description>This video gets you up and running with the basics and concepts of the Desktop Paint.  

Learn about the workflow, tool basics and a few tips along the way.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/087_desktop_paint001.m4v" length="74300391" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/087_desktop_paint001.m4v</guid>
	<pubDate>Thu, 14 Mar 2013 17:29:20 GMT</pubDate>
	<itunes:duration>00:07:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 88 - Desktop Paint: Clone Me Out-->
	<title>Desktop Paint: Clone Me Out</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Clean Up a Static Shot using Desktop Paint</itunes:subtitle>
	<itunes:summary>This video teaches you how to properly remove "unwanted" elements out of a static shot using Desktop Paint.

Good use of clone and revealing tools followed by recomposing the shot using ConnectFX</itunes:summary>
	<description>This video teaches you how to properly remove "unwanted" elements out of a static shot using Desktop Paint.

Good use of clone and revealing tools followed by recomposing the shot using ConnectFX</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/088_desktop_paint002.m4v" length="79954265" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/088_desktop_paint002.m4v</guid>
	<pubDate>Thu, 14 Mar 2013 17:31:52 GMT</pubDate>
	<itunes:duration>00:09:15</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 89 - ConnectFX Paint: Basics & Concepts-->
	<title>ConnectFX Paint: Basics and Concepts</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Introducing the ConnectFX Paint basics and concepts</itunes:subtitle>
	<itunes:summary>This video gets you up and running with the basics and concepts of the ConnectFX Paint.  

Learn about the workflow, tool basics and a few tips along the way.</itunes:summary>
	<description>This video gets you up and running with the basics and concepts of the ConnectFX Paint.  

Learn about the workflow, tool basics and a few tips along the way.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/089_connectfx_paint001.m4v" length="91997942" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/089_connectfx_paint001.m4v</guid>
	<pubDate>Thu, 14 Mar 2013 17:32:20 GMT</pubDate>
	<itunes:duration>00:09:58</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 90 - ConnectFX: Clone Me Out-->
	<title>ConnectFX Paint: Clone Me Out</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Clean Up a Static Shot using ConnectFX Paint</itunes:subtitle>
	<itunes:summary>This video teaches you how to properly remove "unwanted" elements out of a static shot using ConnectFX Paint.

Good use of clone and revealing tools followed by recomposing the shot using ConnectFX</itunes:summary>
	<description>This video teaches you how to properly remove "unwanted" elements out of a static shot using ConnectFX Paint.

Good use of clone and revealing tools followed by recomposing the shot using ConnectFX</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/090_connectfx_paint002.m4v" length="78691951" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/090_connectfx_paint002.m4v</guid>
	<pubDate>Thu, 14 Mar 2013 17:34:52 GMT</pubDate>
	<itunes:duration>00:09:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 91 - Digital Intermediate Conform with EDLs and DPX - Part 1-->
	<title>The Digital Intermediate Conform with EDLs and DPX - Part 1</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This two part videos series show you how to do a file-based digital intermediate conform using EDLs and DPX image sequences</itunes:subtitle>
	<itunes:summary>This two part videos series show you how to do a file-based digital intermediate conform using EDLs and DPX image sequences.  Covering the traditional off-line to on-line editorial workflow.
Part 1 - Importing the media, EDL and relinking to the sequence.</itunes:summary>
	<description>This two part videos series show you how to do a file-based digital intermediate conform using EDLs and DPX image sequences.  Covering the traditional off-line to on-line editorial workflow.
Part 1 - Importing the media, EDL and relinking to the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/091_edl_dpx_conform001.m4v" length="104772025" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/091_edl_dpx_conform001.m4v</guid>
	<pubDate>Tue, 19 Mar 2013 22:02:11 GMT</pubDate>
	<itunes:duration>00:11:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 92 - Digital Intermediate Conform with EDLs and DPX - Part 2-->
	<title>The Digital Intermediate Conform with EDLs and DPX - Part 2</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This two part videos series show you how to do a file-based digital intermediate conform using EDLs and DPX image sequences</itunes:subtitle>
	<itunes:summary>Part 2 - Manually add the leaders to the beginning and end of the sequence as well as perform a continuity check on the sequence against the original off-line edit.</itunes:summary>
	<description>Part 2 - Manually add the leaders to the beginning and end of the sequence as well as perform a continuity check on the sequence against the original off-line edit.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/092_edl_dpx_conform002.m4v" length="66707724" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/092_edl_dpx_conform002.m4v</guid>
	<pubDate>Tue, 19 Mar 2013 22:05:39 GMT</pubDate>
	<itunes:duration>00:07:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 93 - Perspective Free 3D Rendering -->
	<title>HOT TIP: Perspective Free 3D Rendering </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Work with images without using 3D perspective.</itunes:subtitle>
	<itunes:summary>This quick 3 minute HOT TIP shows you how to work with images without using 3D perspective.

Common uses include object positioning in 3D space as well as motion graphic styling.</itunes:summary>
	<description>This quick 3 minute HOT TIP shows you how to work with images without using 3D perspective.

Common uses include object positioning in 3D space as well as motion graphic styling.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/093_ht_perspective_free_rendering.m2v" length="27552352" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/093_ht_perspective_free_rendering.m2v</guid>
	<pubDate>Wed, 27 Mar 2013 13:32:23 GMT</pubDate>
	<itunes:duration>00:03:20</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 94 - Action Extraction -->
	<title>Hot Tip: Action Media Extraction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>How to extract directly loaded action media into ConnectFX</itunes:subtitle>
	<itunes:summary>This quick HOT TIP shows you how to extract directly loaded action media into ConnectFX

The video also covers the difference between direct and in-direct media loading in action.</itunes:summary>
	<description>This quick HOT TIP shows you how to extract directly loaded action media into ConnectFX

The video also covers the difference between direct and in-direct media loading in action.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/094_action_extraction.m4v" length="20702106" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/094_action_extraction.m4v</guid>
	<pubDate>Mon, 15 Apr 2013 12:07:30 GMT</pubDate>
	<itunes:duration>00:02:21</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 95 - Desktop Paint: Paint on Alpha -->
	<title>Desktop Paint: Paint on Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Painting on the Alpha Channel with Desktop Paint</itunes:subtitle>
	<itunes:summary>This video teaches you how to paint on an alpha channel using Desktop Paint.

I have also included a small taster of auto-paint for brush stroke automation.</itunes:summary>
	<description>This video teaches you how to paint on an alpha channel using Desktop Paint.

I have also included a small taster of auto-paint for brush stroke automation.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/095_desktop_paint004.m4v" length="72973926" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/095_desktop_paint004.m4v</guid>
	<pubDate>Fri, 26 Apr 2013 14:39:03 GMT</pubDate>
	<itunes:duration>00:07:55</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 96 - ConnectFX Paint: Paint on Alpha -->
	<title>ConnectFX Paint: Paint on Alpha</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Painting on the Alpha Channel with ConnectFX Paint</itunes:subtitle>
	<itunes:summary>This video teaches you how to paint on an alpha channel using the Paint node in ConnectFX.</itunes:summary>
	<description>This video teaches you how to paint on an alpha channel using the Paint node in ConnectFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/096_connectfx_paint004.m4v" length="49693676" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/096_connectfx_paint004.m4v</guid>
	<pubDate>Fri, 26 Apr 2013 14:42:23 GMT</pubDate>
	<itunes:duration>00:05:26</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 97 - Snapping to ConnectFX Grid -->
	<title>HOT TIP: Ordering ConnectFX with Grid Snapping</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Keep your node trees tidy with pixel grid snapping</itunes:subtitle>
	<itunes:summary>This video shows you how you can use the viewer pixel grid to snap nodes into position to keep the ConnectFX in a tidy and orderly fashion.</itunes:summary>
	<description>This video shows you how you can use the viewer pixel grid to snap nodes into position to keep the ConnectFX in a tidy and orderly fashion.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/097_ht_connectfx_grid.m4v" length="15757485" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/097_ht_connectfx_grid.m4v</guid>
	<pubDate>Fri, 03 May 2013 11:09:46 GMT</pubDate>
	<itunes:duration>00:01:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<!-- NEW SMOKE VERSION - 2013 Extension 1 - GETTING STARTED VIDEO SERIES -->



<item>
<!-- Episode 98 - install Smoke 2013 ext 1 -->
	<title>Installing Smoke 2013 Extension 1 with a standalone license </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This video takes you through the installation process of the standalone Smoke 2013 Extension 1 software application.</itunes:summary>
	<description>This video takes you through the installation process of the standalone Smoke 2013 Extension 1 software application.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/098_install_smoke2013.m4v" length="19828016" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/098_install_smoke2013.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:10:28 GMT</pubDate>
	<itunes:duration>00:02:18</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 99 - Tour of Smoke 2013 ext1 UI -->
	<title>Tour of the Smoke 2013 interface </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie takes you through a tour of the Autodesk Smoke interface</itunes:summary>
	<description>This movie takes you through a tour of the Autodesk Smoke interface</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/099_ui_introduction.m4v" length="60581092" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/099_ui_introduction.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:20:40 GMT</pubDate>
	<itunes:duration>00:06:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 100 - New Project and New User -->
	<title>First Start: Generate a new project and a new user </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to create a new project and user in Autodesk Smoke</itunes:summary>
	<description>This movie shows you how to create a new project and user in Autodesk Smoke</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/100_project_user_creation.m4v" length="63812006" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/100_project_user_creation.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:22:38 GMT</pubDate>
	<itunes:duration>00:07:14</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 101 - MediaHub: Importing Media -->
	<title>MediaHub: Importing Media </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to use the MediaHub to import footage into Smoke.</itunes:summary>
	<description>This movie shows you how to use the MediaHub to import footage into Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/101_media_import_media.m4v" length="67336455" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/101_media_import_media.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:24:29 GMT</pubDate>
	<itunes:duration>00:06:54</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 102 - MediaHub: Dealing with Alpha and Photoshop PSD -->
	<title>MediaHub: Dealing with Alpha and Photoshop PSD </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to import files with embedded alpha as well as multi-layered Photoshop files.</itunes:summary>
	<description>This movie shows you how to import files with embedded alpha as well as multi-layered Photoshop files.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/102_media_hub_alpha_psd.m4v" length="46583235" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/102_media_hub_alpha_psd.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:25:58 GMT</pubDate>
	<itunes:duration>00:04:59</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 103 - Performing a Basic Conform -->
	<title>MediaHub: Performing a Basic Conform </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to rebuild a timeline coming from an Avid AAF or Final Cut Pro XML and link it to the accompanying media in Smoke.</itunes:summary>
	<description>This movie shows you how to rebuild a timeline coming from an Avid AAF or Final Cut Pro XML and link it to the accompanying media in Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/103_basic_conform.m4v" length="72049388" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/103_basic_conform.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:27:26 GMT</pubDate>
	<itunes:duration>00:07:27</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 104 - Media Library: Organising your Media and Sequence -->
	<title>Media Library: Organising your Media and Sequence </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to organise your media and sequences using the Media Library, folders and sub-folders.</itunes:summary>
	<description>This movie shows you how to organise your media and sequences using the Media Library, folders and sub-folders.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/104_media_library_organisation.m4v" length="44735349" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/104_media_library_organisation.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:29:07 GMT</pubDate>
	<itunes:duration>00:05:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 105 - Timeline Editing: Viewing the Source Footage  -->
	<title>Timeline Editing: Viewing the Source Footage </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie looks at how you view your source clips in the source viewer to prepare them for editing.</itunes:summary>
	<description>This movie looks at how you view your source clips in the source viewer to prepare them for editing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/105_viewing_source.m4v" length="53743223" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/105_viewing_source.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:30:51 GMT</pubDate>
	<itunes:duration>00:06:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 106 - Timeline Editing: Viewing the Source and Sequence Metadata  -->
	<title>Timeline Editing: Viewing the Source and Sequence Metadata </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie looks at how you view the metadata in your source clips and sequences.  This includes metadata such as timecode, tape name, media location, media type and more.</itunes:summary>
	<description>This movie looks at how you view the metadata in your source clips and sequences.  This includes metadata such as timecode, tape name, media location, media type and more.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/106_source_sequence_metadata.m4v" length="32756773" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/106_source_sequence_metadata.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:33:25 GMT</pubDate>
	<itunes:duration>00:03:40</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 107 - Timeline Editing: Creating and Managing Sequences  -->
	<title>Timeline Editing: Creating and Managing Sequences </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to create sequences for editing as well as manage video and audio tracks inside the sequence.</itunes:summary>
	<description>This movie shows you how to create sequences for editing as well as manage video and audio tracks inside the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/107_sequence.m4v" length="59736023" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/107_sequence.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:36:33 GMT</pubDate>
	<itunes:duration>00:06:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 108 - Timeline Editing: Navigating the Sequence  -->
	<title>Timeline Editing: Navigating the Sequence </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to move around an edited sequence efficiently.</itunes:summary>
	<description>This movie shows you how to move around an edited sequence efficiently.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/108_sequence_navigation.m4v" length="59736023" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/108_sequence_navigation.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:38:55 GMT</pubDate>
	<itunes:duration>00:05:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 109 - Timeline Editing: Playback and the J K L Workflow  -->
	<title>Timeline Editing: Playback and the J K L Workflow </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to play your sequences as well as use the common J K L keyboard shortcuts for a variety of playback behaviours.</itunes:summary>
	<description>This movie shows you how to play your sequences as well as use the common J K L keyboard shortcuts for a variety of playback behaviours.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/109_play_jkl_workflow.m4v" length="31919635" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/109_play_jkl_workflow.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:40:42 GMT</pubDate>
	<itunes:duration>00:03:40</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 110 - Timeline Editing: Digital and Analogue Audio Scrubbing  -->
	<title>Timeline Editing: Digital and Analogue Audio Scrubbing </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to scrub audio in the sequence. Digital and analogue audio scrubbing choices are also available in the sequence.</itunes:summary>
	<description>This movie shows you how to scrub audio in the sequence. Digital and analogue audio scrubbing choices are also available in the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/110_audio_scrub.m4v" length="27668864" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/110_audio_scrub.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:42:42 GMT</pubDate>
	<itunes:duration>00:03:09</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 111 - Timeline Editing: Sequence Patching - Video Tracks  -->
	<title>Timeline Editing: Sequence Patching - Video Tracks </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie introduces the sequence patch panel and concepts.  Starting off with video tabs and how to patch with the patch panel.</itunes:summary>
	<description>This movie introduces the sequence patch panel and concepts.  Starting off with video tabs and how to patch with the patch panel.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/111_sequence_patching_intro.m4v" length="38073063" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/111_sequence_patching_intro.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:44:44 GMT</pubDate>
	<itunes:duration>00:04:09</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 112 - Timeline Editing: Sequence Patching - Audio Tracks  -->
	<title>Timeline Editing: Sequence Patching - Audio Tracks </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to patch and assign audio tracks.  This also includes a brief explanation on working with Mono Audio tracks and Stereo Audio Tracks.</itunes:summary>
	<description>This movie shows you how to patch and assign audio tracks.  This also includes a brief explanation on working with Mono Audio tracks and Stereo Audio Tracks.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/112_patching_audio.m4v" length="38157157" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/112_patching_audio.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:46:47 GMT</pubDate>
	<itunes:duration>00:04:08</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 113 - Timeline Editing: Overwrite, Insert and Drag & Drop Editing  -->
	<title>Timeline Editing: Overwrite, Insert and Drag and Drop Editing</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to perform insert, overwrite and drag and drop editing into the sequence.</itunes:summary>
	<description>This movie shows you how to perform insert, overwrite and drag and drop editing into the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/113_overinsertdd.m4v" length="45000578" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/113_overinsertdd.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:48:44 GMT</pubDate>
	<itunes:duration>00:05:10</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 114 - Timeline Editing: The 3-Point and 4-Point Edit  -->
	<title>Timeline Editing: The 3-Point and 4-Point Edit </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to perform the well known 3-point and 4-point editing techniques  the sequence.</itunes:summary>
	<description>This movie shows you how to perform the well known 3-point and 4-point editing techniques  the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/114_3_4_point_edit.m4v" length="32130675" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/114_3_4_point_edit.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:50:45 GMT</pubDate>
	<itunes:duration>00:03:35</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 115 - Timeline Editing: Splice, Extract, Lift and Creating Sub-Clips  -->
	<title>Timeline Editing: Splice, Extract, Lift and Creating Sub-Clips </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to splice segments in the sequence as well as the common lift and extract tools in the sequence.  You'll also learn to create sub-clips from sections of the sequence.</itunes:summary>
	<description>This movie shows you how to splice segments in the sequence as well as the common lift and extract tools in the sequence.  You'll also learn to create sub-clips from sections of the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/115_splice_extract_lift_subclip.m4v" length="35644907" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/115_splice_extract_lift_subclip.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:52:35 GMT</pubDate>
	<itunes:duration>00:04:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 116 - Timeline Editing: Gesturally Moving Segments  -->
	<title>Timeline Editing: Gesturally Moving Segments </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows how to gesturally move segments around the sequence.  This includes indicators and functions that affect how the segment moves in the sequence.
</itunes:summary>
	<description>This movie shows how to gesturally move segments around the sequence.  This includes indicators and functions that affect how the segment moves in the sequence.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/116_move_segments.m4v" length="43177149" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/116_move_segments.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:54:40 GMT</pubDate>
	<itunes:duration>00:04:57</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 117 - Timeline Editing: Working with Sync  -->
	<title>Timeline Editing: Working with Sync</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to deal with keeping sync in the sequence as well as deal with synchronous video and audio segments and keeping them in sync.
</itunes:summary>
	<description>This movie shows you how to deal with keeping sync in the sequence as well as deal with synchronous video and audio segments and keeping them in sync.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/117_working_with_sync.m4v" length="69936637" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/117_working_with_sync.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:56:26 GMT</pubDate>
	<itunes:duration>00:07:58</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 118 - Timeline Editing: Match Frame and Reveal  -->
	<title>Timeline Editing: Match Frame and Reveal </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows how to do match frames from the sequence as well as revealing media in the sequence and libraries.</itunes:summary>
	<description>This movie shows how to do match frames from the sequence as well as revealing media in the sequence and libraries.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/118_matchframe_reveal.m4v" length="30844101" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/118_matchframe_reveal.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:58:22 GMT</pubDate>
	<itunes:duration>00:03:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 119 - Timeline Trimming: The Trim View  -->
	<title>Timeline Trimming: The Trim View </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to trim transitions in the sequence.  This also includes detailed instructions on how to use the trim view.</itunes:summary>
	<description>This movie shows you how to trim transitions in the sequence.  This also includes detailed instructions on how to use the trim view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/119_trim_view.m4v" length="58183203" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/119_trim_view.m4v</guid>
	<pubDate>Tue, 28 May 2013 10:59:58 GMT</pubDate>
	<itunes:duration>00:06:42</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>



<item>
<!-- Episode 120 - Timeline Trimming: The Slip View  -->
	<title>Timeline Trimming: The Slip view </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to slip segment media in the sequence.  This also includes detailed instructions on how to use the slip view.</itunes:summary>
	<description>This movie shows you how to slip segment media in the sequence.  This also includes detailed instructions on how to use the slip view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/120_slip_view.m4v" length="31990803" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/120_slip_view.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:01:31 GMT</pubDate>
	<itunes:duration>00:03:40</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 121 - Timeline Trimming: The Slide view  -->
	<title>Timeline Trimming: The Slide view </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to slide segments around the sequence.  This also includes detailed instructions on how to use the slide view.</itunes:summary>
	<description>This movie shows you how to slide segments around the sequence.  This also includes detailed instructions on how to use the slide view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/121_slide_view.m4v" length="47311663" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/121_slide_view.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:02:54 GMT</pubDate>
	<itunes:duration>00:05:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 122 - Timeline FX: Transitions - Dissolves and Wipes  -->
	<title>Timeline FX: Transitions - Dissolves and Wipes</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows how to apply, modify and delete transitions in the sequence.  This also shows how to modify dissolves and basic wipe transitions.</itunes:summary>
	<description>This movie shows how to apply, modify and delete transitions in the sequence.  This also shows how to modify dissolves and basic wipe transitions.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/122_transitions.m4v" length="42775390" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/122_transitions.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:04:26 GMT</pubDate>
	<itunes:duration>00:04:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 123 - Timeline FX: The Basics   -->
	<title>Timeline FX: The Basics </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie introduces the Timeline FX.  You will learn how to apply, modify and delete Timeline FX.  This also includes an introduction to the basics parameters bar, Timeline FX editors as well as apply effects to segments and gap segments in the sequence.</itunes:summary>
	<description>This movie introduces the Timeline FX.  You will learn how to apply, modify and delete Timeline FX.  This also includes an introduction to the basics parameters bar, Timeline FX editors as well as apply effects to segments and gap segments in the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/123_fx_basics.m4v" length="60153403" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/123_fx_basics.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:06:22 GMT</pubDate>
	<itunes:duration>00:06:56</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 124 - Timeline FX: Titling  -->
	<title>Timeline FX: Titling</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows how to use the titling tools in Smoke.  Create a 2D title and apply a basic animation move.</itunes:summary>
	<description>This movie shows how to use the titling tools in Smoke.  Create a 2D title and apply a basic animation move.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/124_titling.m4v" length="63159635" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/124_titling.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:07:49 GMT</pubDate>
	<itunes:duration>00:07:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 125 - Timeline FX: Speed Changes   -->
	<title>Timeline FX: Speed Changes </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to change the speed of a segment.  This includes constant and variable speed changes.  Referred to as "Speed Changes", "Time-Remapping" or "Time-Warping".</itunes:summary>
	<description>This movie shows you how to change the speed of a segment.  This includes constant and variable speed changes.  Referred to as "Speed Changes", "Time-Remapping" or "Time-Warping".</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/125_timewarp.m4v" length="67075045" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/125_timewarp.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:08:59 GMT</pubDate>
	<itunes:duration>00:07:38</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 126 - Animation: Animation Modes & Sliders   -->
	<title>Animation: Animation Modes and Sliders </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie introduces the animation tools in Smoke.  Starting off with the different animation modes as well as creating animation using the channel sliders in the various effects editors.</itunes:summary>
	<description>This movie introduces the animation tools in Smoke.  Starting off with the different animation modes as well as creating animation using the channel sliders in the various effects editors.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/126_animation_modes_sliders.m4v" length="49262202" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/126_animation_modes_sliders.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:11:08 GMT</pubDate>
	<itunes:duration>00:05:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 127 - Animation: The Animation Editor   -->
	<title>Animation: The Animation Editor </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows the basics of using the Animation Editor in Smoke.  You look at keyframes, curves, tracks and more.  Learn about all the basic tools to manipulate the animation curves.</itunes:summary>
	<description>This movie shows the basics of using the Animation Editor in Smoke.  You look at keyframes, curves, tracks and more.  Learn about all the basic tools to manipulate the animation curves.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/127_animation_editor.m4v" length="73540179" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/127_animation_editor.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:12:39 GMT</pubDate>
	<itunes:duration>00:08:17</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 128 - Timeline FX: Resize  -->
	<title>Timeline FX: Resize </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to mix different resolutions in the sequence using the Resize Timeline FX.  Look at the different resize types as well as resize filtering for a high-quality scaled image.</itunes:summary>
	<description>This movie shows you how to mix different resolutions in the sequence using the Resize Timeline FX.  Look at the different resize types as well as resize filtering for a high-quality scaled image.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/128_fx_resize.m4v" length="51878623" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/128_fx_resize.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:14:16 GMT</pubDate>
	<itunes:duration>00:05:48</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 129 - Timeline FX: Colour Correction -->
	<title>Timeline FX: Colour Correction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie looks at colour correction in Smoke.  You will go through a few basic colour workflows which include colour matching as well as selective colour correction.</itunes:summary>
	<description>This movie looks at colour correction in Smoke.  You will go through a few basic colour workflows which include colour matching as well as selective colour correction.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/129_fx_colour_correction.m4v" length="69624345" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/129_fx_colour_correction.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:16:59 GMT</pubDate>
	<itunes:duration>00:08:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 130 - Timeline FX: Axis - Basics -->
	<title>Timeline FX: Axis - Basics </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie introduces timeline compositing using the Axis Timeline FX.  You look at basic transformations, surface types and lighting.  This is also your first taster of 3D compositing in Smoke.</itunes:summary>
	<description>This movie introduces timeline compositing using the Axis Timeline FX.  You look at basic transformations, surface types and lighting.  This is also your first taster of 3D compositing in Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/130_fx_axis_basics.m4v" length="70443865" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/130_fx_axis_basics.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:18:37 GMT</pubDate>
	<itunes:duration>00:08:11</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 131 - Timeline FX: Tracking and Stabilising -->
	<title>Timeline FX: Tracking and Stabilising </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to track one object to a background in the sequence.  You also learn how to stabilise a shot to remove an unwanted camera move.</itunes:summary>
	<description>This movie shows you how to track one object to a background in the sequence.  You also learn how to stabilise a shot to remove an unwanted camera move.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/131_tracking_basics.m4v" length="41542436" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/131_tracking_basics.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:20:15 GMT</pubDate>
	<itunes:duration>00:04:43</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 132 - Timeline FX: Key -->
	<title>Timeline FX: Keying</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to perform a key in the sequence.  You will learn how to key with the master keyer, colour suppress, colour correct and mask unwanted areas of your image.</itunes:summary>
	<description>This movie shows you how to perform a key in the sequence.  You will learn how to key with the master keyer, colour suppress, colour correct and mask unwanted areas of your image.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/132_basic_key.m4v" length="67064466" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/132_basic_key.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:21:51 GMT</pubDate>
	<itunes:duration>00:07:39</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 133 - The ConnectFX Workflow -->
	<title>The ConnectFX Workflow</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie introduces the world of Connect FX.  This is node-based compositing available directly within the sequence.  Have totally control over all your effects with this amazing toolset in Autodesk Smoke.</itunes:summary>
	<description>This movie introduces the world of Connect FX.  This is node-based compositing available directly within the sequence.  Have totally control over all your effects with this amazing toolset in Autodesk Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/133_connectFX.m4v" length="97174287" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/133_connectFX.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:23:19 GMT</pubDate>
	<itunes:duration>00:11:04</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 134 - Action 3D Compositing Overview - Part 1 -->
	<title>Action 3D Compositing Overview - Part 1</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>Part 1 of this overview shows you how to access Action within ConnectFX.  Take a multi-layer composite and convert it into a fully functioning 3D composite.  Learn about the Media list, media effects, the action schematic and the action settings.</itunes:summary>
	<description>Part 1 of this overview shows you how to access Action within ConnectFX.  Take a multi-layer composite and convert it into a fully functioning 3D composite.  Learn about the Media list, media effects, the action schematic and the action settings.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/134_action_p1.m4v" length="71258683" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/134_action_p1.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:24:59 GMT</pubDate>
	<itunes:duration>00:08:10</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 135 - Action 3D Compositing Overview - Part 2 -->
	<title>Action 3D Compositing Overview - Part 2</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>Part 2 of this overview shows you how to manipulate a surface in 3D space.  Also learn how to add media into Action as well as import a layered Photoshop PSD file for further compositing.</itunes:summary>
	<description>Part 2 of this overview shows you how to manipulate a surface in 3D space.  Also learn how to add media into Action as well as import a layered Photoshop PSD file for further compositing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/135_action_p2.m4v" length="72591393" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/135_action_p2.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:26:35 GMT</pubDate>
	<itunes:duration>00:08:11</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 136 - Action 3D Compositing Overview - Part 3 -->
	<title>Action 3D Compositing Overview - Part 3</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>Part 3 of this overview shows you how to import a FBX 3D model into the action compositor.  You will also add a light to shade the composite.  Finally you'll animate the 3D camera and set up the settings for the final render.</itunes:summary>
	<description>Part 3 of this overview shows you how to import a FBX 3D model into the action compositor.  You will also add a light to shade the composite.  Finally you'll animate the 3D camera and set up the settings for the final render.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/136_action_p3.m4v" length="57737387" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/136_action_p3.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:28:39 GMT</pubDate>
	<itunes:duration>00:06:42</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 137 - Audio: Audio Timeline FX -->
	<title>Audio: Audio Timeline FX </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to use the audio Timeline FX in the sequence.  This also includes audio fades, audio cross fades, audio and effects and audio rubber-banding.</itunes:summary>
	<description>This movie shows you how to use the audio Timeline FX in the sequence.  This also includes audio fades, audio cross fades, audio and effects and audio rubber-banding.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/137_audiofx.m4v" length="61422007" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/137_audiofx.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:29:58 GMT</pubDate>
	<itunes:duration>00:07:01</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 138 - The Audio Desk -->
	<title>Audio: The Audio Desk</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to use Smoke's audio mixer - The Audio Desk.

We look at the audio routing between the sequence and the audio desk as well as the various audio mixing options available.</itunes:summary>
	<description>This movie shows you how to use Smoke's audio mixer - The Audio Desk.

We look at the audio routing between the sequence and the audio desk as well as the various audio mixing options available.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/138_audiodesk.m4v" length="52856453" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/138_audiodesk.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:31:23 GMT</pubDate>
	<itunes:duration>00:06:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 139 - The Tools Tab -->
	<title>The Tools Tab</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to use the tools tab which provides some creative and utility tools outside of the sequence.  Learn the workflow how to apply them to your clips in the library and thumbnail view.</itunes:summary>
	<description>This movie shows you how to use the tools tab which provides some creative and utility tools outside of the sequence.  Learn the workflow how to apply them to your clips in the library and thumbnail view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/139_desktoptools.m4v" length="51349347" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/139_desktoptools.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:33:14 GMT</pubDate>
	<itunes:duration>00:05:51</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 140 - MediaHub: Exporting Media -->
	<title>MediaHub: Exporting Media</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>This movie shows you how to export your sequence out of Smoke for your final deliverables.  You'll look at the export workflows as well as the advanced settings for configuring your export.</itunes:summary>
	<description>This movie shows you how to export your sequence out of Smoke for your final deliverables.  You'll look at the export workflows as well as the advanced settings for configuring your export.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/140_export.m4v" length="75027585" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/140_export.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:34:59 GMT</pubDate>
	<itunes:duration>00:07:43</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 141 - Archiving your Project -->
	<title>Archiving your Project </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started Series for Smoke 2013 Extension 1</itunes:subtitle>
	<itunes:summary>In the final movie of the Smoke Getting Started Series, you learn how to back up your project.  You will learn how to make a self-contained project archive as you final back up.  You will also learn how to restore a project archive.</itunes:summary>
	<description>In the final movie of the Smoke Getting Started Series, you learn how to back up your project.  You will learn how to make a self-contained project archive as you final back up.  You will also learn how to restore a project archive.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/141_archiving.m4v" length="83665338" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/141_archiving.m4v</guid>
	<pubDate>Tue, 28 May 2013 11:51:34 GMT</pubDate>
	<itunes:duration>00:09:04</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 142 - CGI Compositing - Introduction -->
	<title>CGI Compositing - Introduction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This movie introduces the video series, provides the links for the downloads, project creation and media importing for the composite.</itunes:summary>
	<description>This movie introduces the video series, provides the links for the downloads, project creation and media importing for the composite.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/142_introduction.m4v" length="67752666" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/142_introduction.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:16:46 GMT</pubDate>
	<itunes:duration>00:07:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 143 - CGI Compositing - Working with different colour spaces -->
	<title>CGI Compositing - Working with Different Colour Spaces</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This movie deals with the challenge of compositing CGI and live video when the colour spaces are different.  Learn how to tone-map colour space for accurate compositing in scene linear colour space and remap the viewers to display the colours correctly.</itunes:summary>
	<description>This movie deals with the challenge of compositing CGI and live video when the colour spaces are different.  Learn how to tone-map colour space for accurate compositing in scene linear colour space and remap the viewers to display the colours correctly.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/143_working_with_different_colour_spaces.m4v" length="104202387" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/143_working_with_different_colour_spaces.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:18:30 GMT</pubDate>
	<itunes:duration>00:12:07</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 144 - CGI Compositing - composite the first beauty pass  -->
	<title>CGI Compositing - Compositing the First Beauty Pass</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>In this movie, we start to combine the render passes with the background as well as look how image floating point data can recover detail in the image.</itunes:summary>
	<description>In this movie, we start to combine the render passes with the background as well as look how image floating point data can recover detail in the image.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/144_composite_the_first_beauty_pass.m4v" length="66561331" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/144_composite_the_first_beauty_pass.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:20:17 GMT</pubDate>
	<itunes:duration>00:07:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 145 - CGI Compositing - build a render pass for CGI Smoke -->
	<title>CGI Compositing - Build a Render Pass for the CGI Smoke</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video shows you how to take existing render passes and create a new alpha render pass to separate the CGI smoke from the other elements in the CGI render.</itunes:summary>
	<description>This video shows you how to take existing render passes and create a new alpha render pass to separate the CGI smoke from the other elements in the CGI render.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/145_build_a_render_pass_cgi_smoke.m4v" length="67567322" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/145_build_a_render_pass_cgi_smoke.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:21:58 GMT</pubDate>
	<itunes:duration>00:07:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 146 - CGI Compositing - Post Blurring with Motion Vectors -->
	<title>CGI Compositing - Post Blurring with Motion Vector Data</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video shows you to use extra render pass data such as motion vectors to apply motion blur to the CGI elements at the compositing stage instead of rendering blurring with your 3D application.</itunes:summary>
	<description>This video shows you to use extra render pass data such as motion vectors to apply motion blur to the CGI elements at the compositing stage instead of rendering blurring with your 3D application.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/146_post_blurring_motion_vectors.m4v" length="50681304" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/146_post_blurring_motion_vectors.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:23:37 GMT</pubDate>
	<itunes:duration>00:05:40</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 147 - CGI Compositing - Create motion vectors in Autodesk Smoke -->
	<title>CGI Compositing - Creating Motion Vector Data in Smoke</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video shows you how to create your own motion vector data in Autodesk Smoke.  This allows you to apply motion blur to CGI elements even though they might not have been rendered with a motion vector pass in Autodesk Maya.</itunes:summary>
	<description>This video shows you how to create your own motion vector data in Autodesk Smoke.  This allows you to apply motion blur to CGI elements even though they might not have been rendered with a motion vector pass in Autodesk Maya.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/147_create_motion_vector_in_smoke.m4v" length="46397658" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/147_create_motion_vector_in_smoke.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:25:00 GMT</pubDate>
	<itunes:duration>00:05:07</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 148 - CGI Compositing - Combine the render passes -->
	<title>CGI Compositing - Combining the Render Passes</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video shows you how to use the Blend and Comp node to combine all the different render passes together into the main composite.</itunes:summary>
	<description>This video shows you how to use the Blend and Comp node to combine all the different render passes together into the main composite.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/148_combine_render_passes.m4v" length="72088070" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/148_combine_render_passes.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:26:41 GMT</pubDate>
	<itunes:duration>00:07:59</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 149 - CGI Compositing - Enhancing with Action -->
	<title>CGI Compositing - Enhancing the Composite Look with Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video shows you how to the Action 3D compositor to further enhance your CGI composites by adding in an additional FBX 3D model as well as lighting effects for an enhanced look.</itunes:summary>
	<description>This video shows you how to the Action 3D compositor to further enhance your CGI composites by adding in an additional FBX 3D model as well as lighting effects for an enhanced look.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/149_enhancing_with_action.m4v" length="81160464" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/149_enhancing_with_action.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:28:28 GMT</pubDate>
	<itunes:duration>00:09:06</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 150 - CGI Compositing - Converting to Video Colour Space -->
	<title>CGI Compositing - Converting to Video Colour Space</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Compositing with CGI Render Passes in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video completes the series by taking your final composite in scene linear colour space  and remapping it back to video colour space for your deliverable before exiting ConnectFX.</itunes:summary>
	<description>This video completes the series by taking your final composite in scene linear colour space  and remapping it back to video colour space for your deliverable before exiting ConnectFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/150_converting_2_video_colour_space.m4v" length="48159564" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/150_converting_2_video_colour_space.m4v</guid>
	<pubDate>Mon, 24 Jun 2013 14:30:01 GMT</pubDate>
	<itunes:duration>00:05:20</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 151 - The Paint Tool - Cloning a Moving Shot -->
	<title>The Paint Tool: Cloning on a Moving Shot</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Use the Paint Tool to clean up a panning Shot</itunes:subtitle>
	<itunes:summary>This video teaches you how to clean up a moving shot using the Paint Tool.

This includes using AutoPaint as well as basic tracking to math the brush stroke to the camera movement.</itunes:summary>
	<description>This video teaches you how to clean up a moving shot using the Paint Tool.

This includes using AutoPaint as well as basic tracking to math the brush stroke to the camera movement.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/151_tools_paint005.m4v" length="73541876" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/151_tools_paint005.m4v</guid>
	<pubDate>Wed, 10 Jul 2013 12:26:38 GMT</pubDate>
	<itunes:duration>00:08:04</itunes:duration>
	<itunes:keywords>	</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 152 - ConnectFX Paint - Cloning a Moving Shot -->
	<title>ConnectFX Paint: Cloning on a Moving Shot</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Use the ConnectFX Paint node to clean up a panning Shot</itunes:subtitle>
	<itunes:summary>This video teaches you how to clean up a moving shot using the Paint Node in ConnectFX.

This includes the workflow with the MUX node and Action to track the paint strokes to the background.</itunes:summary>
	<description>This video teaches you how to clean up a moving shot using the Paint Node in ConnectFX.

This includes the workflow with the MUX node and Action to track the paint strokes to the background.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/152_cfxpaint005.m4v" length="96402822" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/152_cfxpaint005.m4v</guid>
	<pubDate>Wed, 10 Jul 2013 12:28:52 GMT</pubDate>
	<itunes:duration>00:11:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 153 - Working with Lens Distortion: Removing Distortion -->
	<title>Working with Lens Distortion: Removing Distortion</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Removing Lens Distortion in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video teaches you how to remove lens distortion from your footage using a grid card.

This is useful information for any VFX supervisor or artist working in post-production.</itunes:summary>
	<description>This video teaches you how to remove lens distortion from your footage using a grid card.

This is useful information for any VFX supervisor or artist working in post-production.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/153_removing_distortion.m4v" length="70812872" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/153_removing_distortion.m4v</guid>
	<pubDate>Fri, 19 Jul 2013 12:27:19 GMT</pubDate>
	<itunes:duration>00:08:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 154 - Working with Lens Distortion: Reintroducing Distortion -->
	<title>Working with Lens Distortion: Reintroducing Distortion</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Reintroducing Lens Distortion in Autodesk Smoke</itunes:subtitle>
	<itunes:summary>This video teaches you how to reintroduce lens distortion into your footage after compositing the images in a corrected state.

This is useful information for any VFX supervisor or artist working in post-production.</itunes:summary>
	<description>This video teaches you how to reintroduce lens distortion into your footage after compositing the images in a corrected state.

This is useful information for any VFX supervisor or artist working in post-production.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/154_reintroducing_distortion.m4v" length="61343750" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/154_reintroducing_distortion.m4v</guid>
	<pubDate>Fri, 19 Jul 2013 12:29:20 GMT</pubDate>
	<itunes:duration>00:06:35</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 155 - Creating Optical Scopes: Creating the Shape - Masks 1 -->
	<title>Creating Optical Scopes: Creating the Shape - Masks 1</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 1 shows you to use the mask tools to create the shape of the scope.
</itunes:summary>
	<description>Part 1 shows you to use the mask tools to create the shape of the scope.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/155_scope001.m4v" length="77583002" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/155_scope001.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:11:18 GMT</pubDate>
	<itunes:duration>00:08:48</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 156 - Creating Optical Scopes: Working on the edges -->
	<title>Creating Optical Scopes: Working on the Edges</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 2 shows you to create an edge matte to simulate smearing and blurring at the edges of the scope.</itunes:summary>
	<description>Part 2 shows you to create an edge matte to simulate smearing and blurring at the edges of the scope.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/156_scope002.m4v" length="48696555" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/156_scope002.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:13:13 GMT</pubDate>
	<itunes:duration>00:05:12</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 157 - Creating Optical Scopes: Creating Crosshairs - Masks 2 -->
	<title>Creating Optical Scopes: Making Crosshairs - Masks 2</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 3 shows you to create create a crosshair with borders using the mask tools to be composited later in the simulated scope.</itunes:summary>
	<description>Part 3 shows you to create create a crosshair with borders using the mask tools to be composited later in the simulated scope.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/157_scope003.m4v" length="76082545" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/157_scope003.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:14:37 GMT</pubDate>
	<itunes:duration>00:08:14</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 158 - Creating Optical Scopes: Tracking and Animation -->
	<title>Creating Optical Scopes: Tracking and Animation</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 4 shows you to how to track and animate the crosshair in the scope.  You also learn about multiple instancing and offset animation in action.</itunes:summary>
	<description>Part 4 shows you to how to track and animate the crosshair in the scope.  You also learn about multiple instancing and offset animation in action.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/158_scope004.m4v" length="59608570" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/158_scope004.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:16:13 GMT</pubDate>
	<itunes:duration>00:06:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 159 - Creating Optical Scopes: Adding Lens defects in Action -->
	<title>Creating Optical Scopes: Adding Lens Defects in Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 5 shows you to create lens defects in Action using lens distortion as well as lens flare texturing.</itunes:summary>
	<description>Part 5 shows you to create lens defects in Action using lens distortion as well as lens flare texturing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/159_scope005.m4v" length="43559323" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/159_scope005.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:17:49 GMT</pubDate>
	<itunes:duration>00:04:54</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 160 - Creating Optical Scopes: Switching to Night Vision  -->
	<title>Creating Optical Scopes: Switching to Night Vision</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series show you how to use various tools to simulate an optical scope.</itunes:subtitle>
	<itunes:summary>Part 6 shows you to convert your day scope into a night vision scope.  We will use the Damage node to acheive this effect as well as tweak the settings to give a great finished look.</itunes:summary>
	<description>Part 6 shows you to convert your day scope into a night vision scope.  We will use the Damage node to acheive this effect as well as tweak the settings to give a great finished look.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/160_scope006.m4v" length="46809949" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/160_scope006.m4v</guid>
	<pubDate>Wed, 31 Jul 2013 15:19:31 GMT</pubDate>
	<itunes:duration>00:05:02</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 161 - Smoke and Resolve Interoperability - Preparing for Resolve  -->
	<title>Smoke and Resolve Interoperability - Preparing for Resolve</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series shows the round-tripping interoperability between Autodesk Smoke and BlackMagic Design DaVinci Resolve.</itunes:subtitle>
	<itunes:summary>Part 1 shows you to prepare the sequence in Smoke as well as "publish" the media and EDL to rebuild the timeline in Davinci Resolve.</itunes:summary>
	<description>Part 1 shows you to prepare the sequence in Smoke as well as "publish" the media and EDL to rebuild the timeline in Davinci Resolve.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/161_smoke_resolve_interop_001.m4v" length="65977251" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/161_smoke_resolve_interop_001.m4v</guid>
	<pubDate>Tue, 13 Aug 2013 08:55:47 GMT</pubDate>
	<itunes:duration>00:07:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing,Resolve,BlackMagic</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 162 - Smoke and Resolve Interoperability - Conforming in Resolve  -->
	<title>Smoke and Resolve Interoperability - Conforming in Resolve</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series shows the round-tripping interoperability between Autodesk Smoke and BlackMagic Design DaVinci Resolve.</itunes:subtitle>
	<itunes:summary>Part 2 shows you how to rebuild the timeline in Davinci Resolve.  Details include loading the video media, building the timeline and syncing to an audio guide track.  All coming from Autodesk Smoke.</itunes:summary>
	<description>Part 2 shows you how to rebuild the timeline in Davinci Resolve.  Details include loading the video media, building the timeline and syncing to an audio guide track.  All coming from Autodesk Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/162_smoke_resolve_interop_002.m4v" length="31890079" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/162_smoke_resolve_interop_002.m4v</guid>
	<pubDate>Tue, 13 Aug 2013 08:58:26 GMT</pubDate>
	<itunes:duration>00:03:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing,Resolve,BlackMagic</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 163 - Smoke and Resolve Interoperability - Round-tripping to Smoke  -->
	<title>Smoke and Resolve Interoperability - Round-tripping to Smoke</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series shows the round-tripping interoperability between Autodesk Smoke and BlackMagic Design DaVinci Resolve.</itunes:subtitle>
	<itunes:summary>Part 3 shows how to export the timeline from Davinci Resolve back to Autodesk Smoke.  Details include rendering and exporting a XML in DaVinci Resolve.  Followed by conforming in Autodesk Smoke and rebuilding the sequence for final finishing.</itunes:summary>
	<description>Part 3 shows how to export the timeline from Davinci Resolve back to Autodesk Smoke.  Details include rendering and exporting a XML in DaVinci Resolve.  Followed by conforming in Autodesk Smoke and rebuilding the sequence for final finishing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/163_smoke_resolve_interop_003.m4v" length="46099264" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/163_smoke_resolve_interop_003.m4v</guid>
	<pubDate>Tue, 13 Aug 2013 09:02:22 GMT</pubDate>
	<itunes:duration>00:05:02</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing,Resolve,BlackMagic</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 164 - Stabilization - Introduction Primer   -->
	<title>Stabilization - Introduction Primer </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series covers most of the workflows concerning stabilization.</itunes:subtitle>
	<itunes:summary>This introduction primer gives you an explanation about stabilization, the workflows, where to find the tools and why the tracking tools are called the "Stabilizer".</itunes:summary>
	<description>This introduction primer gives you an explanation about stabilization, the workflows, where to find the tools and why the tracking tools are called the "Stabilizer".</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/164_stab_primer.m4v" length="29430747" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/164_stab_primer.m4v</guid>
	<pubDate>Wed, 21 Aug 2013 15:14:58 GMT</pubDate>
	<itunes:duration>00:03:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 165 - Stabilization - One-point Stabilization  -->
	<title>Stabilization - Stabilizing Position</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series covers most of the workflows concerning stabilization.</itunes:subtitle>
	<itunes:summary>This video shows you how to perform a position stabilization with a one-pointer track using the Axis TimelineFX.</itunes:summary>
	<description>This video shows you how to perform a position stabilization with a one-pointer track using the Axis TimelineFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/165_stabilising_position.m4v" length="55141218" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/165_stabilising_position.m4v</guid>
	<pubDate>Wed, 21 Aug 2013 15:16:36 GMT</pubDate>
	<itunes:duration>00:06:07</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>










<item>
<!-- Episode 166 - Stabilization - Two-Point stabilization  -->
	<title>Stabilization - Stabilizing Position, Rotation and Scale</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series covers most of the workflows concerning stabilization.</itunes:subtitle>
	<itunes:summary>This video shows you how to perform position, rotation and scale stabilization with two-pointer tracking using the Action 3D compositor.</itunes:summary>
	<description>This video shows you how to perform position, rotation and scale stabilization with two-pointer tracking using the Action 3D compositor.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/166_stabilizing_pos_rot_scale.m4v" length="69319220" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/166_stabilizing_pos_rot_scale.m4v</guid>
	<pubDate>Wed, 21 Aug 2013 15:18:10 GMT</pubDate>
	<itunes:duration>00:07:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<!-- Episode 167 - Stabilization - Smooth Camera move with Jitter  -->
<item>
	<title>Stabilization - Smoothing Camera Moves with Jitter</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series covers most of the workflows concerning stabilization.</itunes:subtitle>
	<itunes:summary>This video shows you how to smooth out a camera move and remove unwanted bumps using the 2D Transform node.
</itunes:summary>
	<description>This video shows you how to smooth out a camera move and remove unwanted bumps using the 2D Transform node.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/167_smoothing_camera.m4v" length="71796320" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/167_smoothing_camera.m4v</guid>
	<pubDate>Wed, 21 Aug 2013 15:19:38 GMT</pubDate>
	<itunes:duration>00:08:01</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 168 - Stabilization - Stabilize-Composite-Destabilize  -->
	<title>Stabilization - Stabilize, Composite and Destabilize</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series covers most of the workflows concerning stabilization.</itunes:subtitle>
	<itunes:summary>This video shows you a compositing workflow to stabilize your image, composite an element with 4-point tracking and finally destabilize the image to add the camera back again.</itunes:summary>
	<description>This video shows you a compositing workflow to stabilize your image, composite an element with 4-point tracking and finally destabilize the image to add the camera back again.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/168_stab_comp_destab.m4v" length="78912943" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/168_stab_comp_destab.m4v</guid>
	<pubDate>Wed, 21 Aug 2013 15:29:09 GMT</pubDate>
	<itunes:duration>00:08:54</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 169 - Beauty Retouching - Removing the Grain  -->
	<title>Beauty Retouching - Removing the Grain</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teach you a few digital beauty retouching techniques.</itunes:subtitle>
	<itunes:summary>This video shows you how to set up the shot and remove the grain pattern in the image to prepare for digital beauty retouching.</itunes:summary>
	<description>This video shows you how to set up the shot and remove the grain pattern in the image to prepare for digital beauty retouching.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/169_remove_grain.m4v" length="38020900" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/169_remove_grain.m4v</guid>
	<pubDate>Fri, 30 Aug 2013 11:09:58 GMT</pubDate>
	<itunes:duration>00:04:24</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 170 - Beauty Retouching - Spot Removal with Pixel Spread  -->
	<title>Beauty Retouching - Spot Removal with Pixel Spread</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teach you a few digital beauty retouching techniques.</itunes:subtitle>
	<itunes:summary>This video shows you how to use masks, tracking and the pixel spread tool to isolate and remove spots, marks and blemishes on the skin.</itunes:summary>
	<description>This video shows you how to use masks, tracking and the pixel spread tool to isolate and remove spots, marks and blemishes on the skin.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/170_spot_removal.m4v" length="47601843" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/170_spot_removal.m4v</guid>
	<pubDate>Fri, 30 Aug 2013 11:12:04 GMT</pubDate>
	<itunes:duration>00:05:26</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 171 - Beauty Retouching - Skin Smoothing  -->
	<title>Beauty Retouching - Skin Smoothing</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teach you a few digital beauty retouching techniques.</itunes:subtitle>
	<itunes:summary>This video shows you how to use use masks, vertices point tracking and blurring to achieve a smooth skin looking effect.</itunes:summary>
	<description>This video shows you how to use use masks, vertices point tracking and blurring to achieve a smooth skin looking effect.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/171_skin_smoothing.m4v" length="64659377" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/171_skin_smoothing.m4v</guid>
	<pubDate>Fri, 30 Aug 2013 11:13:40 GMT</pubDate>
	<itunes:duration>00:07:27</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 172 - Beauty Retouching - Returning the Detail  -->
	<title>Beauty Retouching - Returning the Detail</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teach you a few digital beauty retouching techniques.</itunes:subtitle>
	<itunes:summary>This video shows you how to add back some facial detail and highlights that were lost from the skin smoothing process.</itunes:summary>
	<description>This video shows you how to add back some facial detail and highlights that were lost from the skin smoothing process.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/172_detail_pass.m4v" length="52409418" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/172_detail_pass.m4v</guid>
	<pubDate>Fri, 30 Aug 2013 11:15:24 GMT</pubDate>
	<itunes:duration>00:05:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 173 - Beauty Retouching - Reintroducing the Original Grain  -->
	<title>Beauty Retouching - Reintroducing the Original Grain</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teach you a few digital beauty retouching techniques.</itunes:subtitle>
	<itunes:summary>This video shows you how to isolate the grain pattern from the original untouched image and re-apply the same grain to our retouched image for convincing results.</itunes:summary>
	<description>This video shows you how to isolate the grain pattern from the original untouched image and re-apply the same grain to our retouched image for convincing results.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/173_return_grain.m4v" length="54960639" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/173_return_grain.m4v</guid>
	<pubDate>Fri, 30 Aug 2013 11:16:42 GMT</pubDate>
	<itunes:duration>00:06:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 174 - 3D Displacement:  Displace that in Action  -->
	<title>3D Displacement:  Displace that in Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video teaches you how to do 3D displacement on a 3D surface object in Action.</itunes:subtitle>
	<itunes:summary>This video teaches you how to do 3D displacement on a 3D surface object in Action.

Good for bringing things to life such as  waving flags and simulating textures - Satin, plastics and etc.</itunes:summary>
	<description>This video teaches you how to do 3D displacement on a 3D surface object in Action.

Good for bringing things to life such as  waving flags and simulating textures - Satin, plastics and etc.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/174_displace_that.m4v" length="76266168" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/174_displace_that.m4v</guid>
	<pubDate>Wed, 04 Sep 2013 13:52:10 GMT</pubDate>
	<itunes:duration>00:08:26</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 175 - 3D Displacement:  Creating a Displacement Map  -->
	<title>3D Displacement: Creating a Displacement Map</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Creating a Displacement Map for Action</itunes:subtitle>
	<itunes:summary>In response to a user request, this video teaches you how to create a displacement map in ConnectFX to be used  for the 3D displacement in Action.</itunes:summary>
	<description>In response to a user request, this video teaches you how to create a displacement map in ConnectFX to be used  for the 3D displacement in Action.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/175_displacement_map.m4v" length="54795329" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/175_displacement_map.m4v</guid>
	<pubDate>Thu, 12 Sep 2013 17:20:53 GMT</pubDate>
	<itunes:duration>00:06:01</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>










<item>
<!-- Episode 176 - Making 2D into 3D: Extruding a Flat Logo into a 3D Object  -->
	<title>Making 2D into 3D: Extruding a Flat Logo into a 3D Object</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teaches you how to extrude a flat logo into a 3D Object.</itunes:subtitle>
	<itunes:summary>In part 1, you learn how to extrude a flat 2D image into a 3D object as well as fix the edging on the 3D extrusion.</itunes:summary>
	<description>In part 1, you learn how to extrude a flat 2D image into a 3D object as well as fix the edging on the 3D extrusion.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/176_extruding_2d_p1.m4v" length="84250482" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/176_extruding_2d_p1.m4v</guid>
	<pubDate>Tue, 17 Sep 2013 16:39:31 GMT</pubDate>
	<itunes:duration>00:08:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 177 - Making 2D into 3D: Refining the 3D Extrusion  -->
	<title>Making 2D into 3D: Refining the 3D Extrusion</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teaches you how to extrude a flat logo into a 3D Object.</itunes:subtitle>
	<itunes:summary>In part 2, we refine the extruded edges further but customising the colour and expanding the edge of the alpha.  Preserving logo outlines and edge details.</itunes:summary>
	<description>In part 2, we refine the extruded edges further but customising the colour and expanding the edge of the alpha.  Preserving logo outlines and edge details.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/177_extruding_2d_p2.m4v" length="62941728" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/177_extruding_2d_p2.m4v</guid>
	<pubDate>Tue, 17 Sep 2013 16:41:15 GMT</pubDate>
	<itunes:duration>00:06:15</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>











<item>
<!-- Episode 178 - Making 2D into 3D: Lighting, 3D Beveled Text and Multi-Object Texturing   -->
	<title>Making 2D into 3D: Lighting, 3D Beveled Text and Multi-Object Texturing</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>This video series teaches you how to extrude a flat logo into a 3D Object.</itunes:subtitle>
	<itunes:summary>In part 3, you add the finishing touches like lighting, 3D text, beveling and texturing.</itunes:summary>
	<description>In part 3, you add the finishing touches like lighting, 3D text, beveling and texturing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/178_extruding_2d_p3.m4v" length="84701124" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/178_extruding_2d_p3.m4v</guid>
	<pubDate>Tue, 17 Sep 2013 16:42:52 GMT</pubDate>
	<itunes:duration>00:09:23</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>










<item>
<!-- Episode 179 - Working with 3D Models: Importing FBX 3D Models   -->
	<title>Working with 3D Models: Importing FBX 3D Model</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 1, we go through recommended points to set up your models for export from your 3D application.

We also import the FBX 3D model and prepare Smoke for making adjustments and finishing.</itunes:summary>
	<description>In part 1, we go through recommended points to set up your models for export from your 3D application.

We also import the FBX 3D model and prepare Smoke for making adjustments and finishing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/179_import_3d_model_fbx.m4v" length="71303468" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/179_import_3d_model_fbx.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:13:52 GMT</pubDate>
	<itunes:duration>00:08:24</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>













<item>
<!-- Episode 180 - Working with 3D Models: Creating a Spherical Environment   -->
	<title>Working with 3D Models: Creating a Spherical Environment</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 2, we import in a giant 3D sphere as 3DS model.  We texture it with a background image as well as invert the faces to create a spherical background that interacts with the composite. 
</itunes:summary>
	<description>In part 2, we import in a giant 3D sphere as 3DS model.  We texture it with a background image as well as invert the faces to create a spherical background that interacts with the composite. 
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/180_spherical_enviro.m4v" length="47167293" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/180_spherical_enviro.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:15:14 GMT</pubDate>
	<itunes:duration>00:05:09</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>












<item>
<!-- Episode 181 - Working with 3D Models: Enhancing the Spotlight 3D Model   -->
	<title>Working with 3D Models: Enhancing the Spotlight 3D Model</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 3, we start adding finishing touches to the 3D model of the spotlight.   We add a light cone (rays) and lens flares. 

We also show how to quick replicate 3D geometry and scene set up to keep up with client's changing their minds.
</itunes:summary>
	<description>In part 3, we start adding finishing touches to the 3D model of the spotlight.   We add a light cone (rays) and lens flares. 

We also show how to quick replicate 3D geometry and scene set up to keep up with client's changing their minds.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/181_enhancing_model.m4v" length="82196190" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/181_enhancing_model.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:17:07 GMT</pubDate>
	<itunes:duration>00:09:13</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>










<item>
<!-- Episode 182 - Working with 3D Models: Painting on Texture Maps   -->
	<title>Working with 3D Models: Painting on Texture Maps</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 4, we extract the texture map of the spotlight model out of Action in order to do some painting touch ups as well as add more elements on the texture.

We also adjust the texture to better fit it around the model.</itunes:summary>
	<description>In part 4, we extract the texture map of the spotlight model out of Action in order to do some painting touch ups as well as add more elements on the texture.

We also adjust the texture to better fit it around the model.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/182_painting_on_textures.m4v" length="54942679" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/182_painting_on_textures.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:18:40 GMT</pubDate>
	<itunes:duration>00:06:21</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>












<item>
<!-- Episode 183 - Working with 3D Models: Light Blooming, Filtering and Motion Blur   -->
	<title>Working with 3D Models: Light Blooming, Filtering and Motion Blur</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 5, we add a bit of glowing with some light blooming.

We also up the filtering to increase the texture quality as well as finish off with some motion blur.</itunes:summary>
	<description>In part 5, we add a bit of glowing with some light blooming.

We also up the filtering to increase the texture quality as well as finish off with some motion blur.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/183_bloom_filter_moblur.m4v" length="43494771" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/183_bloom_filter_moblur.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:20:11 GMT</pubDate>
	<itunes:duration>00:04:57</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 184 - Working with 3D Models: Depth of Field Blurring with an Action Z-Depth Pass  -->
	<title>Working with 3D Models: Depth of Field Blurring with an Action Z-Depth Pass</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn about working with an FBX 3D Model into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In part 6, we end off this series by creating a Z-Depth pass out of Action.  This is used in the Depth of Field node to create depth of field blurring effects.</itunes:summary>
	<description>In part 6, we end off this series by creating a Z-Depth pass out of Action.  This is used in the Depth of Field node to create depth of field blurring effects.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/184_dof_blurring.m4v" length="69463551" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/184_dof_blurring.m4v</guid>
	<pubDate>Wed, 02 Oct 2013 10:21:58 GMT</pubDate>
	<itunes:duration>00:07:34</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 185 - Tracking: Tracking Primer  -->
	<title>Tracking Primer</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 1 introduces tracking in Autodesk Smoke.  You'll learn about its application, location of tracking tools and what to look forward to in this series of videos.
</itunes:summary>
	<description>Part 1 introduces tracking in Autodesk Smoke.  You'll learn about its application, location of tracking tools and what to look forward to in this series of videos.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/185_tracking_primer.m4v" length="29192349" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/185_tracking_primer.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 09:50:19 GMT</pubDate>
	<itunes:duration>00:03:23</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 186 - Tracking: Position Tracking with Axis TimelineFX  -->
	<title>Position Tracking with Axis TimelineFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 2 shows you how to do a single point position track in the sequence using layers.   This does not require going into the ConnectFX modules.
</itunes:summary>
	<description>Part 2 shows you how to do a single point position track in the sequence using layers.   This does not require going into the ConnectFX modules.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/186_pos_point_track.m4v" length="52961204" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/186_pos_point_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 09:54:32 GMT</pubDate>
	<itunes:duration>00:05:48</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 187 - Tracking: Position Tracking with Action in ConnectFX  -->
	<title>Position Tracking with Action in ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 3 shows you how to do a single point position track using the Action 3D compositor in ConnectFX.

We also look at the AXIS node offset workflow after tracking.
</itunes:summary>
	<description>Part 3 shows you how to do a single point position track using the Action 3D compositor in ConnectFX.

We also look at the AXIS node offset workflow after tracking.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/187_pos_track_action.m4v" length="51239613" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/187_pos_track_action.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 09:59:50 GMT</pubDate>
	<itunes:duration>00:05:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 188 - Tracking:  Two-Point Tracking -->
	<title>Two-Point Tracking</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 4 shows the workflow of tracking position, scale and rotation using a two-point track.

Here you will replace a license plate of a vehicle with this method.</itunes:summary>
	<description>Part 4 shows the workflow of tracking position, scale and rotation using a two-point track.

Here you will replace a license plate of a vehicle with this method.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/188_2pt_track.m4v" length="75393149" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/188_2pt_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:02:05 GMT</pubDate>
	<itunes:duration>00:08:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 189 - Tracking: Replacing a Road Sign with Four-Point Tracking  -->
	<title>Replacing a Road Sign with Four-Point Tracking</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 5 shows the four corner pinning and four corner tracking workflow.

This workflow is typically used for screen replacements and replacing boards or signs.</itunes:summary>
	<description>Part 5 shows the four corner pinning and four corner tracking workflow.

This workflow is typically used for screen replacements and replacing boards or signs.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/189_corner_pin.m4v" length="80774031" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/189_corner_pin.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:04:10 GMT</pubDate>
	<itunes:duration>00:09:12</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 190 - Tracking: Tracking an  Auto-Paint Brush Stroke  -->
	<title>Tracking an  Auto-Paint Brush Stroke</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 6 shows the workflow how to track a paint stroke to a background using the paint tool located in the Tools Tab.

This workflow is good for cleaning an image as well as other painting tasks.</itunes:summary>
	<description>Part 6 shows the workflow how to track a paint stroke to a background using the paint tool located in the Tools Tab.

This workflow is good for cleaning an image as well as other painting tasks.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/190_paint_track.m4v" length="56093314" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/190_paint_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:05:53 GMT</pubDate>
	<itunes:duration>00:06:10</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 191 - Tracking: Masks - Object Tracking  -->
	<title>Masks - Object Tracking</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 7 shows the workflow of tracking a mask shape to a background.

This workflow will show how to track multiple mask shapes to a background image.
</itunes:summary>
	<description>Part 7 shows the workflow of tracking a mask shape to a background.

This workflow will show how to track multiple mask shapes to a background image.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/191_mask_object_track.m4v" length="70038120" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/191_mask_object_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:07:46 GMT</pubDate>
	<itunes:duration>00:07:41</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 192 - Tracking: Masks - Control Point Tracking  -->
	<title>Masks - Control Point Tracking</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>Part 8 shows the workflow of tracking the controls points of a mask to a background.

This workflow allows for the mask shape to change over time while tracking to its background..</itunes:summary>
	<description>Part 8 shows the workflow of tracking the controls points of a mask to a background.

This workflow allows for the mask shape to change over time while tracking to its background..</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/192_mask_point_track.m4v" length="76514784" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/192_mask_point_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:09:46 GMT</pubDate>
	<itunes:duration>00:08:35</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 193 - Tracking: Dealing with Difficult Tracks  -->
	<title>Dealing with Difficult Tracks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about tracking into Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>In the final part 9, we look at three techniques to deal with challenging tracks.   

Tracking references can go behind other objects or go off-screen so these workflows will help you deal with these challenges.
</itunes:summary>
	<description>In the final part 9, we look at three techniques to deal with challenging tracks.   

Tracking references can go behind other objects or go off-screen so these workflows will help you deal with these challenges.
</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/193_tough_track.m4v" length="97828267" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/193_tough_track.m4v</guid>
	<pubDate>Thu, 31 Oct 2013 10:12:28 GMT</pubDate>
	<itunes:duration>00:11:06</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 194 - The Text Tool: Titling in Autodesk Smoke  -->
	<title>The Text Tool:  Titling in Autodesk Smoke</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about titling tools in Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>This video shows you the various ways to create or import text.  We look at text attributes and alignments as well as a few tips in the text tool.</itunes:summary>
	<description>This video shows you the various ways to create or import text.  We look at text attributes and alignments as well as a few tips in the text tool.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/194_titling_in_smoke.m4v" length="89236791" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/194_titling_in_smoke.m4v</guid>
	<pubDate>Fri, 29 Nov 2013 09:27:32 GMT</pubDate>
	<itunes:duration>00:09:51</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 195 - The Text Tool: Text on Path  -->
	<title>The Text Tool:  Text on a Path</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about titling tools in Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>This video shows you how to place your text on an editable path.  Learn about path animation as well as turning your masks into paths for your text.</itunes:summary>
	<description>This video shows you how to place your text on an editable path.  Learn about path animation as well as turning your masks into paths for your text.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/195_text_on_path.m4v" length="44863129" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/195_text_on_path.m4v</guid>
	<pubDate>Fri, 29 Nov 2013 09:29:10 GMT</pubDate>
	<itunes:duration>00:05:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 196 - The Text Tool: Credit Rolls, Stylizing and Tabulation  -->
	<title>The Text Tool: Credit Rolls, Stylizing and Tabulation</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Learn all about titling tools in Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>This video shows you how to do credit rolls in Autodesk Smoke.  Correctly format the text in the roll using stylising and tabulation.</itunes:summary>
	<description>This video shows you how to do credit rolls in Autodesk Smoke.  Correctly format the text in the roll using stylising and tabulation.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/196_credit_rolls.m4v" length="96284864" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/</guid>
	<pubDate>Thu, 05 Dec 2013 12:54:57 GMT</pubDate>
	<itunes:duration>00:10:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 197 - Colour Warper - the Mid-Tomes Trackball  -->
	<title>Colour Warper - The Mid-Tones Trackball</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Get to grips with the Mid-Tones Trackball when grading!</itunes:subtitle>
	<itunes:summary>Learn about how the mid-tones trackball works and why it is different from the other grading trackballs in the Colour Warper.</itunes:summary>
	<description>Learn about how the mid-tones trackball works and why it is different from the other grading trackballs in the Colour Warper.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/197_cw_mid_tones.m4v" length="42427869" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/197_cw_mid_tones.m4v</guid>
	<pubDate>Thu, 23 Jan 2014 14:51:48 GMT</pubDate>
	<itunes:duration>00:04:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 198 - Colour Warper - Balancing the Black and White Levels  -->
	<title>Colour Warper - Balancing the Black and White Levels</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Balance the black and white levels of an image</itunes:subtitle>
	<itunes:summary>In this video you learn how to balance the black and white levels of an image.  With this technique you can correct an unbalanced source or balance a foreground element to a background plate whilst compositing. </itunes:summary>
	<description>In this video you learn how to balance the black and white levels of an image.  With this technique you can correct an unbalanced source or balance a foreground element to a background plate whilst compositing. </description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/198_cw_balance_bw_levels.m4v" length="43919882" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/198_cw_balance_bw_levels.m4v</guid>
	<pubDate>Fri, 31 Jan 2014 10:24:02 GMT</pubDate>
	<itunes:duration>00:04:58</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 199 - Blurring Faces and Logos with Action  -->
	<title>Blurring Faces and Logos with Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Blurring Faces and Logos with Action</itunes:subtitle>
	<itunes:summary>In this video you learn how to blur faces and logos using the Action 3D Compositor.

Great for obscuring things you don't want people to see or identify.  An every task! </itunes:summary>
	<description>In this video you learn how to blur faces and logos using the Action 3D Compositor.

Great for obscuring things you don't want people to see or identify.  An every task! </description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/199_action_blur.m4v" length="58945949" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/199_action_blur.m4v</guid>
	<pubDate>Fri, 14 Feb 2014 18:07:18 GMT</pubDate>
	<itunes:duration>00:06:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 200 - Pixelating Faces and Logos with ConnectFX  -->
	<title>Pixelating Faces and Logos with ConnectFX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Pixelating Faces and Logos with ConnectFX</itunes:subtitle>
	<itunes:summary>In this video you learn how to pixelate faces and logos using ConnectFX.

With ConnectFX, you have greater creative flexility on your look.  Hide faces and logos by blurring, pixelating or however you wish!</itunes:summary>
	<description>In this video you learn how to pixelate faces and logos using ConnectFX.

With ConnectFX, you have greater creative flexility on your look.  Hide faces and logos by blurring, pixelating or however you wish!</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/200_cfx_blur.m4v" length="66502198" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/200_cfx_blur.m4v</guid>
	<pubDate>Fri, 14 Feb 2014 18:08:24 GMT</pubDate>
	<itunes:duration>00:07:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 201 - Working with Wireframe Icons in Action  -->
	<title>Working with Wireframe Icons in Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Working with Wireframe Icons in Action</itunes:subtitle>
	<itunes:summary>This video shows you how to set up your wireframe icons in Action so that they do not get in the way of your compositing.</itunes:summary>
	<description>This video shows you how to set up your wireframe icons in Action so that they do not get in the way of your compositing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/201_action_wireframe.m4v" length="25246872" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/201_action_wireframe.m4v</guid>
	<pubDate>Fri, 28 Feb 2014 14:27:18 GMT</pubDate>
	<itunes:duration>00:02:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 202 - ConnectFX - Creating Custom Nodes  -->
	<title>ConnectFX - Creating Custom Nodes </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>create custom nodes in ConnectFX.</itunes:subtitle>
	<itunes:summary>This video shows you how to create custom nodes in ConnectFX.

Great for templating graphics, creating custom tools and presets.</itunes:summary>
	<description>This video shows you how to create custom nodes in ConnectFX.

Great for templating graphics, creating custom tools and presets.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/202_custom_nodes.m4v" length="33560466" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/202_custom_nodes.m4v</guid>
	<pubDate>Fri, 07 Mar 2014 15:35:28 GMT</pubDate>
	<itunes:duration>00:03:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 203 - Action - Motion Blur Tips  -->
	<title>Action - Motion Blur Tips</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Motion Blur Tips in Action</itunes:subtitle>
	<itunes:summary>This video covers a couple of special tips on using Motion Blur in the Action 3D Compositor.

We look at selective-based motion blurring as well as a tip for creating motion blur on the first and last frame of a composite.</itunes:summary>
	<description>This video covers a couple of special tips on using Motion Blur in the Action 3D Compositor.

We look at selective-based motion blurring as well as a tip for creating motion blur on the first and last frame of a composite.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/203_action_moblur_tips.m4v" length="31976835" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/203_action_moblur_tips.m4v</guid>
	<pubDate>Thu, 13 Mar 2014 21:38:33 GMT</pubDate>
	<itunes:duration>00:03:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2013,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 204 - Smoke 2015 - Tour of the UI  -->
	<title>Tour of the Smoke 2015 User Interface</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video gives you an introductory tour of the Autodesk Smoke 2015 User Interface.</itunes:summary>
	<description>This video gives you an introductory tour of the Autodesk Smoke 2015 User Interface.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/204_ui_intro.m4v" length="63555509" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/204_ui_intro.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:12:15 GMT</pubDate>
	<itunes:duration>00:07:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 205 - Smoke 2015 -  Project and User Creation -->
	<title>Project and User Creation</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video shows you how to create a new Smoke project and User Profile.</itunes:summary>
	<description>This video shows you how to create a new Smoke project and User Profile.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/205_proj_user.m4v" length="65617031" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/205_proj_user.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:13:23 GMT</pubDate>
	<itunes:duration>00:07:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 206 - Smoke 2015 -  Importing Media -->
	<title>Importing Media</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video you learn how to import media in Autodesk Smoke 2015.</itunes:summary>
	<description>In this video you learn how to import media in Autodesk Smoke 2015.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/206_media_import.m4v" length="65528220" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/206_media_import.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:14:47 GMT</pubDate>
	<itunes:duration>00:06:49</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 207 - Smoke 2015 -  Importing Media - Dealing with Alpha and Photoshop PSD -->
	<title>Importing Media - Dealing with Alpha and Photoshop PSD</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video you learn how to import files with alpha as well as how to handle Photoshop files.</itunes:summary>
	<description>In this video you learn how to import files with alpha as well as how to handle Photoshop files.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/207_alpha_psd_import.m4v" length="43557496" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/207_alpha_psd_import.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:15:50 GMT</pubDate>
	<itunes:duration>00:04:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 208 - Smoke 2015 - Basic Conforming using AAF or XML  -->
	<title>Basic Conforming using AAF or XML</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you will learn how to do a conform coming from an AAF or XML.</itunes:summary>
	<description>In this video, you will learn how to do a conform coming from an AAF or XML.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/208_conform.m4v" length="69697332" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/208_conform.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:16:59 GMT</pubDate>
	<itunes:duration>00:06:56</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 209 - Smoke 2015 -  Organising the Media Library -->
	<title>Organising the Media Library</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>Learn all about organising and managing your clips and sequences in the Media Library.</itunes:summary>
	<description>Learn all about organising and managing your clips and sequences in the Media Library.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/209_media_library.m4v" length="58684827" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/209_media_library.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:18:04 GMT</pubDate>
	<itunes:duration>00:06:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 210 - Smoke 2015 -  Viewing the Source -->
	<title>Viewing the Source</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to view and manage your source clips in the Source viewer.</itunes:summary>
	<description>In this video, you learn how to view and manage your source clips in the Source viewer.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/210_viewing_source.m4v" length="51459106" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/210_viewing_source.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:19:26 GMT</pubDate>
	<itunes:duration>00:05:54</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 211 - Smoke 2015 - Source and Sequence Metadata  -->
	<title>Source and Sequence Metadata</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video shows you how to call up the metadata information for various media in the project.</itunes:summary>
	<description>This video shows you how to call up the metadata information for various media in the project.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/211_clip_metadata.m4v" length="30239118" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/211_clip_metadata.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:21:02 GMT</pubDate>
	<itunes:duration>00:03:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 212 - Smoke 2015 - The Sequence  -->
	<title>The Sequence</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video shows you how to create sequences as well as manage the tracks within the sequence.</itunes:summary>
	<description>This video shows you how to create sequences as well as manage the tracks within the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/212_sequence.m4v" length="63188300" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/212_sequence.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:22:01 GMT</pubDate>
	<itunes:duration>00:06:33</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 213 - Smoke 2015 -  Sequence Navigation -->
	<title>Sequence Navigation</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video you learn how to navigate your way around the sequence.</itunes:summary>
	<description>In this video you learn how to navigate your way around the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/213_seq_navigation.m4v" length="47581691" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/213_seq_navigation.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:24:25 GMT</pubDate>
	<itunes:duration>00:05:22</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 214 - Smoke 2015 -  Playback and the J K L Workflow -->
	<title>Playback and the J K L Workflow</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video teaches you all about video playback as well as playing media with the standard J K and L workflow.</itunes:summary>
	<description>This video teaches you all about video playback as well as playing media with the standard J K and L workflow.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/214_play_j_k_l.m4v" length="27020062" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/214_play_j_k_l.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:25:33 GMT</pubDate>
	<itunes:duration>00:03:08</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 215 - Smoke 2015 -  Viewing with a Letterbox -->
	<title>Viewing with a Letterbox</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to apply a letterbox overlay in the viewers while viewing your media.</itunes:summary>
	<description>In this video, you learn how to apply a letterbox overlay in the viewers while viewing your media.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/215_view_letterbox.m4v" length="20983899" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/215_view_letterbox.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:26:57 GMT</pubDate>
	<itunes:duration>00:02:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 216 - Smoke 2015 -  Digital and Analogue Audio Scrubbing -->
	<title>Digital and Analogue Audio Scrubbing</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to perform digital and analogue audio scrubbing in sequence.</itunes:summary>
	<description>In this video, you learn how to perform digital and analogue audio scrubbing in sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/216_audio_scrub.m4v" length="24627079" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/216_audio_scrub.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:27:52 GMT</pubDate>
	<itunes:duration>00:02:50</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 217 - Smoke 2015 - Sequence Patching - Video Tracks  -->
	<title>Sequence Patching - Video Tracks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video will show you how to patch video tracks in the sequence for assigned track editing.</itunes:summary>
	<description>This video will show you how to patch video tracks in the sequence for assigned track editing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/217_patch_video.m4v" length="37595616" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/217_patch_video.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:28:53 GMT</pubDate>
	<itunes:duration>00:04:16</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 218 - Smoke 2015 - Sequence Patching - Audio Tracks-->
	<title>Sequence Patching - Audio Tracks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video will show you how to patch audio tracks in the sequence.   The differences between Mono and Stereo audio tracks are also covered as well as the implications.</itunes:summary>
	<description>This video will show you how to patch audio tracks in the sequence.   The differences between Mono and Stereo audio tracks are also covered as well as the implications.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/218_patch_audio.m4v" length="31484141" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/218_patch_audio.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:29:57 GMT</pubDate>
	<itunes:duration>00:03:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 219 - Smoke 2015 -  Editing: Insert, Overwrite and Drag & Drop -->
	<title>Editing: Insert, Overwrite and Drag & Drop</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the typical editing operations such as insert, overwrite and drag and drop editing.</itunes:summary>
	<description>This video covers the typical editing operations such as insert, overwrite and drag and drop editing.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/219_over_insert_drag_drop.m4v" length="41041011" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/219_over_insert_drag_drop.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:31:02 GMT</pubDate>
	<itunes:duration>00:04:47</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 220 - Smoke 2015 -  Editing: The 3-Point and 4-Point Edit -->
	<title>Editing: The 3-Point and 4-Point Edit</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to perform the standard 3-point and 4-point editing technique.</itunes:summary>
	<description>In this video, you learn how to perform the standard 3-point and 4-point editing technique.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/220_edit_3_4_point.m4v" length="31172019" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/220_edit_3_4_point.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:31:53 GMT</pubDate>
	<itunes:duration>00:03:36</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 221 - Smoke 2015 -  Editing: Splice, Extract, Lift and Creating Sub-clips -->
	<title>Editing: Splice, Extract, Lift and Creating Sub-clips</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers a variety of operations such as segment splicing,  extraction and lifting.   Sub-clip creation is also covered in this video.</itunes:summary>
	<description>This video covers a variety of operations such as segment splicing,  extraction and lifting.   Sub-clip creation is also covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/221_splice_extract_lift.m4v" length="37044401" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/221_splice_extract_lift.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:32:51 GMT</pubDate>
	<itunes:duration>00:04:13</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 222 - Smoke 2015 -  Gesturally Moving Segments -->
	<title>Gesturally Moving Segments</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video goes through moving segments around the sequence as well as the options that affect the functionality.</itunes:summary>
	<description>This video goes through moving segments around the sequence as well as the options that affect the functionality.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/222_edit_gestrual.m4v" length="38533487" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/222_edit_gestrual.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:34:27 GMT</pubDate>
	<itunes:duration>00:04:23</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 223 - Smoke 2015 -  Working with Sync -->
	<title>Working with Sync</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers keeping sync in the sequence as well as the link between synchronous video and audio media.</itunes:summary>
	<description>This video covers keeping sync in the sequence as well as the link between synchronous video and audio media.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/223_sync.m4v" length="64319218" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/223_sync.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:35:18 GMT</pubDate>
	<itunes:duration>00:07:20</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 224 - Smoke 2015 -  Match Frame and Reveal -->
	<title>Match Frame and Reveal</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to perform match framing as well as revealing clips in the sequence and media panel.</itunes:summary>
	<description>In this video, you learn how to perform match framing as well as revealing clips in the sequence and media panel.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/224_match_reveal.m4v" length="28012050" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/224_match_reveal.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:36:11 GMT</pubDate>
	<itunes:duration>00:03:15</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 225 - Smoke 2015 -  Trimming - The Trim View -->
	<title>Trimming - The Trim View</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video introduces the trim functionality in the sequence as well as the Trim viewer for accurate monitoring.</itunes:summary>
	<description>This video introduces the trim functionality in the sequence as well as the Trim viewer for accurate monitoring.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/225_trim.m4v" length="58826609" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/225_trim.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:37:06 GMT</pubDate>
	<itunes:duration>00:06:43</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 226 - Smoke 2015 -  Trimming - The Slip View -->
	<title>Trimming - The Slip View</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to slip the media within a segment using slip mode and the trim view.</itunes:summary>
	<description>In this video, you learn how to slip the media within a segment using slip mode and the trim view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/226_slip.m4v" length="30652022" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/226_slip.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:38:03 GMT</pubDate>
	<itunes:duration>00:03:29</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 227 - Smoke 2015 -  Trimming - The Slide View -->
	<title>Trimming - The Slide View</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to slide the media within a segment using slide mode and the trim view.</itunes:summary>
	<description>In this video, you learn how to slide the media within a segment using slide mode and the trim view.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/227_slide.m4v" length="45185684" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/227_slide.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:38:58 GMT</pubDate>
	<itunes:duration>00:05:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 228 - Smoke 2015 -  Transitions - Cuts, Dissolves, Wipes and Action -->
	<title>Transitions - Cuts, Dissolves, Wipes and Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the topic of transitions in the sequence.   The dissolve, wipe and Action Transitions are covered in this video.</itunes:summary>
	<description>This video covers the topic of transitions in the sequence.   The dissolve, wipe and Action Transitions are covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/228_transitions.m4v" length="55690801" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/228_transitions.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:40:02 GMT</pubDate>
	<itunes:duration>00:06:22</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 229 - Smoke 2015 -  Introducing Timeline FX -->
	<title>Introducing Timeline FX</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video introduces the concept of the Timeline FX and the optimised processing engine that performs the effects in the sequence and ConnectFX.  Apply, muting and deleting Timeline FX are also covered.</itunes:summary>
	<description>This video introduces the concept of the Timeline FX and the optimised processing engine that performs the effects in the sequence and ConnectFX.  Apply, muting and deleting Timeline FX are also covered.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/229_tlfx_intro.m4v" length="75786238" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/229_tlfx_intro.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:41:29 GMT</pubDate>
	<itunes:duration>00:08:25</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 230 - Smoke 2015 - Timeline FX - Keying Embedded Alphas with Comp  -->
	<title>Timeline FX - Keying Embedded Alphas with Comp</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to take a file with embedded alpha and key it in the sequence using a Matte Container and the Comp Timeline FX.</itunes:summary>
	<description>In this video, you learn how to take a file with embedded alpha and key it in the sequence using a Matte Container and the Comp Timeline FX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/230_tlfx_key_embed.m4v" length="34880148" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/230_tlfx_key_embed.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:42:28 GMT</pubDate>
	<itunes:duration>00:03:42</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 231 - Smoke 2015 -  Timeline FX - Keying Separate Alphas with Comp -->
	<title>Timeline FX - Keying Separate Alphas with Comp</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to take a separate fill and alpha clip, combine them into a matte container and key it over a background in the sequence.</itunes:summary>
	<description>In this video, you learn how to take a separate fill and alpha clip, combine them into a matte container and key it over a background in the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/231_tlfx_key_sep.m4v" length="30593453" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/231_tlfx_key_sep.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:43:25 GMT</pubDate>
	<itunes:duration>00:03:19</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 232 - Smoke 2015 -  Timeline FX - Adding a Drop Shadow -->
	<title>Timeline FX - Adding a Drop Shadow</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video shows you how to apply a drop shadow to a graphic using the Action Timeline FX drop shadow preset.   Shadow softness, transparency and positioning is covered in this video.</itunes:summary>
	<description>This video shows you how to apply a drop shadow to a graphic using the Action Timeline FX drop shadow preset.   Shadow softness, transparency and positioning is covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/232_drop_shadow.m4v" length="33659348" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/232_drop_shadow.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:44:22 GMT</pubDate>
	<itunes:duration>00:03:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 233 - Smoke 2015 -  Timeline FX - Moving with 2D Transform -->
	<title>Timeline FX - Moving with 2D Transform </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you will use the 2D Transform Timeline FX to reposition a graphic that was keyed using the Comp Timeline FX.   Also great for layer repositioning and picture in picture effects.</itunes:summary>
	<description>In this video, you will use the 2D Transform Timeline FX to reposition a graphic that was keyed using the Comp Timeline FX.   Also great for layer repositioning and picture in picture effects.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/233_2d_transform.m4v" length="51245959" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/233_2d_transform.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:45:13 GMT</pubDate>
	<itunes:duration>00:05:38</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 234 - Smoke 2015 -  Timeline FX - Titling -->
	<title>Timeline FX - Titling </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the basics of creating text and titles in Autodesk Smoke.</itunes:summary>
	<description>This video covers the basics of creating text and titles in Autodesk Smoke.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/234_tlfx_titling.m4v" length="65451418" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/234_tlfx_titling.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:46:08 GMT</pubDate>
	<itunes:duration>00:07:13</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 235 - Smoke 2015 -  Timeline FX - Speed Changes -->
	<title>Timeline FX - Speed Changes </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn how to create speed changes or time-warping using the Time-warp Timeline FX tool.   Constant speed and variable speed changes are covered in this video.</itunes:summary>
	<description>In this video, you learn how to create speed changes or time-warping using the Time-warp Timeline FX tool.   Constant speed and variable speed changes are covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/235_speed_change.m4v" length="68773705" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/235_speed_change.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:46:55 GMT</pubDate>
	<itunes:duration>00:07:41</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 236 - Smoke 2015 -  Animation - Modes and Sliders -->
	<title>Animation - Modes and Sliders</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the different methods to create animation in Autodesk Smoke.  You also learn about the sliders, colours and contextual menus for animation.</itunes:summary>
	<description>This video covers the different methods to create animation in Autodesk Smoke.  You also learn about the sliders, colours and contextual menus for animation.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/236_anim_modes_sliders.m4v" length="45506557 " type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/236_anim_modes_sliders.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:48:42 GMT</pubDate>
	<itunes:duration>00:05:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 237 - Smoke 2015 -  Animation - The Animation Editor -->
	<title>Animation - The Animation Editor </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn all about the animation editor and the different views of your animation such as curves, tracks and info view.   You also learn how to manipulate keyframes to adjust your animation and their timings.</itunes:summary>
	<description>In this video, you learn all about the animation editor and the different views of your animation such as curves, tracks and info view.   You also learn how to manipulate keyframes to adjust your animation and their timings.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/237_anim_editor.m4v" length="72685710" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/237_anim_editor.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:49:33 GMT</pubDate>
	<itunes:duration>00:08:03</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 238 - Smoke 2015 -  Timeline FX - Resize -->
	<title>Timeline FX - Resize </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video discuss the Resize Timeline FX.  This Timeline FX is used to manage multiple resolutions in the sequence as well perform basic pan and scan movements.</itunes:summary>
	<description>This video discuss the Resize Timeline FX.  This Timeline FX is used to manage multiple resolutions in the sequence as well perform basic pan and scan movements.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/238_resize.m4v" length="49621830" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/238_resize.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:50:26 GMT</pubDate>
	<itunes:duration>00:05:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 239 - Smoke 2015 -  Timeline FX - Colour Correction -->
	<title>Timeline FX - Colour Correction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn about the two colour correction tools in Autodesk Smoke. A quick run through is given using the Colour Correct and Colour Warper Timeline FX.</itunes:summary>
	<description>In this video, you learn about the two colour correction tools in Autodesk Smoke. A quick run through is given using the Colour Correct and Colour Warper Timeline FX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/239_tlfx_cc.m4v" length="34081665" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/239_tlfx_cc.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:51:12 GMT</pubDate>
	<itunes:duration>00:03:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 240 - Smoke 2015 -  Colour Balancing and Colour Selectives -->
	<title>Timeline FX - Colour Balancing and Colour Selectives</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video goes through the workflow of colour matching to different segments in the sequence.   We also look at colour selectives for specific colour manipulation.</itunes:summary>
	<description>This video goes through the workflow of colour matching to different segments in the sequence.   We also look at colour selectives for specific colour manipulation.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/240_cc_match_selectives.m4v" length="56742119 " type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/240_cc_match_selectives.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:52:02 GMT</pubDate>
	<itunes:duration>00:06:26</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 241 - Smoke 2015 -  Using a Mask with Colour Correction -->
	<title>Timeline FX - Using a Mask with Colour Correction </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you limit a colour correction effect by creating a mask and using the mask to hold back the colour warper effect.</itunes:summary>
	<description>In this video, you limit a colour correction effect by creating a mask and using the mask to hold back the colour warper effect.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/241_masking_cc.m4v" length="53596252" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/241_masking_cc.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:52:56 GMT</pubDate>
	<itunes:duration>00:05:59</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 242 - Smoke 2015 -  Stabilizing with 2D Transform -->
	<title>Timeline FX - Stabilizing with 2D Transform</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video teaches you the workflow to stabilise a clip using the 2D Transform Timeline FX.</itunes:summary>
	<description>This video teaches you the workflow to stabilise a clip using the 2D Transform Timeline FX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/242_stabilizing.m4v" length="25281756" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/242_stabilizing.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:53:54 GMT</pubDate>
	<itunes:duration>00:02:50</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 242 - Smoke 2015 -  Timeline FX - Action Basics  -->
	<title>Timeline FX - Action Basics</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you start learning all about Action.   This is applicable to Timeline FX and ConnectFX.   Learn about the basic Action objects and well as the various 3D surface types for image manipulation.</itunes:summary>
	<description>In this video, you start learning all about Action.   This is applicable to Timeline FX and ConnectFX.   Learn about the basic Action objects and well as the various 3D surface types for image manipulation.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/243_action_basics.m4v" length="73218798" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/243_action_basics.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:54:55 GMT</pubDate>
	<itunes:duration>00:08:13</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 244 - Smoke 2015 -  Timeline FX - Tracking Layers in Action -->
	<title>Timeline FX - Tracking Layers in Action </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video teaches you tracking one image to another using the Action Timeline Fx.  Please note that these methods are the same in ConnectFX.</itunes:summary>
	<description>This video teaches you tracking one image to another using the Action Timeline Fx.  Please note that these methods are the same in ConnectFX.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/244_action_tracking.m4v" length="56289975" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/244_action_tracking.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:56:01 GMT</pubDate>
	<itunes:duration>00:06:14</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 245 - Smoke 2015 -  Timeline FX - Keying in Action  -->
	<title>Timeline FX - Keying in Action </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video shows you the workflow of keying an image with the Modular Keyer.</itunes:summary>
	<description>This video shows you the workflow of keying an image with the Modular Keyer.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/245_action_keying.m4v" length="78393698 " type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/245_action_keying.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:56:57 GMT</pubDate>
	<itunes:duration>00:08:34</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 246 - Smoke 2015 -  ConnectFX Introduction -->
	<title>ConnectFX Introduction</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you are introduced to the concept of node compositing using ConnectFX inside the sequence.</itunes:summary>
	<description>In this video, you are introduced to the concept of node compositing using ConnectFX inside the sequence.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/246_cfx_intro.m4v" length="90678611" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/246_cfx_intro.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:57:49 GMT</pubDate>
	<itunes:duration>00:10:09</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 247 - Smoke 2015 -  Action Compositing Overview - Part 1 -->
	<title>Action Compositing Overview - Part 1</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this first part of the Action overview, you learn how to take three layers into ConnectFX as a 3D composition and prepare them to build a 3D Composite.</itunes:summary>
	<description>In this first part of the Action overview, you learn how to take three layers into ConnectFX as a 3D composition and prepare them to build a 3D Composite.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/247_action_p1.m4v" length="77543201" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/247_action_p1.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:58:35 GMT</pubDate>
	<itunes:duration>00:08:46</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 248 - Smoke 2015 -  Action Compositing Overview - Part 2 -->
	<title>Action Compositing Overview - Part 2</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In the second part of the Action overview, you start positioning layers in 3D space.  You create a cyclorama with the background, import an additional layer as well as a layered Photoshop file into Action.</itunes:summary>
	<description>In the second part of the Action overview, you start positioning layers in 3D space.  You create a cyclorama with the background, import an additional layer as well as a layered Photoshop file into Action.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/248__action_p2.m4v" length="76171862" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/248__action_p2.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 17:59:20 GMT</pubDate>
	<itunes:duration>00:08:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 249 - Smoke 2015 -  Action Compositing Overview - Part 3 -->
	<title>Action Compositing Overview - Part 3</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In the final part of the Action overview, you import a FBX 3D model into Action and replace the flat version of the logo.  You finish off by adding lights and an animated camera.</itunes:summary>
	<description>In the final part of the Action overview, you import a FBX 3D model into Action and replace the flat version of the logo.  You finish off by adding lights and an animated camera.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/249__action_p3.m4v" length="59641282" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/249__action_p3.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:00:08 GMT</pubDate>
	<itunes:duration>00:06:45</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 250 - Smoke 2015 -  Audio - Audio Timeline FX  -->
	<title>Audio - Audio Timeline FX </title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the audio and audio effects capabilities in the sequence.   Audio gain controls can also be manipulated with rubber banding directly on the audio segments.</itunes:summary>
	<description>This video covers the audio and audio effects capabilities in the sequence.   Audio gain controls can also be manipulated with rubber banding directly on the audio segments.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/250_audio_tlfx.m4v" length="61243882" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/250_audio_tlfx.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:01:01 GMT</pubDate>
	<itunes:duration>00:06:55</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 251 - Smoke 2015 -  Audio - The Audio Desk -->
	<title>Audio - The Audio Desk</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn all about the Audio Desk.  This is the audio mixer in Smoke which helps controls the audio routing from the sequence into the main outputs for exporting and output to VTR.</itunes:summary>
	<description>In this video, you learn all about the Audio Desk.  This is the audio mixer in Smoke which helps controls the audio routing from the sequence into the main outputs for exporting and output to VTR.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/251_audiodesk.m4v" length="52478651" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/251_audiodesk.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:01:56 GMT</pubDate>
	<itunes:duration>00:05:59</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 252 - Smoke 2015 -  Additional Tools -->
	<title>Additional Tools</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>This video covers the additional tools available outside of the sequence in the Tools area  of Autodesk Smoke.   This is handy for some creative as well as technical operations.   Workflows on using these tools are covered in this video.</itunes:summary>
	<description>This video covers the additional tools available outside of the sequence in the Tools area  of Autodesk Smoke.   This is handy for some creative as well as technical operations.   Workflows on using these tools are covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/252_tools.m4v" length="48611669" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/252_tools.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:02:45 GMT</pubDate>
	<itunes:duration>00:05:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 253 - Smoke 2015 -  Exporting Media -->
	<title>Exporting Media</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>In this video, you learn about the various export options for getting you sequence out of Smoke.   We cover the export workflow as well as a few options to tweak the final export.</itunes:summary>
	<description>In this video, you learn about the various export options for getting you sequence out of Smoke.   We cover the export workflow as well as a few options to tweak the final export.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/253_export.m4v" length="65127098" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/253_export.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:03:45 GMT</pubDate>
	<itunes:duration>00:06:32</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 254 - Smoke 2015 -  Archiving the Project -->
	<title>Archiving the Project</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Getting Started - Autodesk Smoke 2015</itunes:subtitle>
	<itunes:summary>With the project now complete, you can now backup the project for archival purposes.  In this video you learn how to archive your project.   We also cover how to restore the project if you need to revisit it at a later date.</itunes:summary>
	<description>With the project now complete, you can now backup the project for archival purposes.  In this video you learn how to archive your project.   We also cover how to restore the project if you need to revisit it at a later date.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/254_archive.m4v" length="86461156" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/254_archive.m4v</guid>
	<pubDate>Fri, 11 Apr 2014 18:04:40 GMT</pubDate>
	<itunes:duration>00:08:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 255 - Smoke 2015 -  Compositing with 3D Tracking - The Analyzer node -->
	<title>Compositing with 3D Tracking - The Analyzer</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 1 of 5 - Compositing with 3D Tracking</itunes:subtitle>
	<itunes:summary>Get started with the Analyzer node in Action to set up and analyse a shot for a 3D Track.</itunes:summary>
	<description>Get started with the Analyzer node in Action to set up and analyse a shot for a 3D Track.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/255_3d_tracking_p1.m4v" length="71133052" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/255_3d_tracking_p1.m4v</guid>
	<pubDate>Wed, 14 May 2014 09:41:22 GMT</pubDate>
	<itunes:duration>00:07:26</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>






<item>
<!-- Episode 256 - Smoke 2015 -  Compositing with 3D Tracking - Refining the 3D Track  -->
	<title>Compositing with 3D Tracking - Refining the Camera Solve and Ground Plane</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 2 of 5 - Compositing with 3D Tracking</itunes:subtitle>
	<itunes:summary>This video shows you how to take the 3D track and refine the data for a better camera solve.  We also cover defining the ground plane of the shot and any real world measurements.</itunes:summary>
	<description>This video shows you how to take the 3D track and refine the data for a better camera solve.  We also cover defining the ground plane of the shot and any real world measurements.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/256_3d_tracking_p2.m4v" length="78646150" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/256_3d_tracking_p2.m4v</guid>
	<pubDate>Wed, 14 May 2014 09:42:20 GMT</pubDate>
	<itunes:duration>00:08:53</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 257 - Smoke 2015 -  Compositing with 3D Tracking - Point Locators and 3D model  -->
	<title>Compositing with 3D Tracking - Point Locators and Integrating a 3D Model</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 3 of 5 - Compositing with 3D Tracking</itunes:subtitle>
	<itunes:summary>This video shows you how to convert the point cloud into Axis nodes or Point Locators.   You will import a 3D model and align it into the scene with point locators.   Exporting the 3D camera and point locates covered in this video.</itunes:summary>
	<description>This video shows you how to convert the point cloud into Axis nodes or Point Locators.   You will import a 3D model and align it into the scene with point locators.   Exporting the 3D camera and point locates covered in this video.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/257_3d_tracking_p3.m4v" length="74304090" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/257_3d_tracking_p3.m4v</guid>
	<pubDate>Wed, 14 May 2014 09:43:22 GMT</pubDate>
	<itunes:duration>00:08:31</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 258 - Smoke 2015 -  Compositing with 3D Tracking - Adding a Shadow  -->
	<title>Compositing with 3D Tracking - Creating a Shadow using Lights and Action Outputs</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 4 of 5 - Compositing with 3D Tracking</itunes:subtitle>
	<itunes:summary>This video will show you the workflow to create a shadow matching the background plate using the point locators, surfaces, lights, Action Render outputs and Comp Nodes.</itunes:summary>
	<description>This video will show you the workflow to create a shadow matching the background plate using the point locators, surfaces, lights, Action Render outputs and Comp Nodes.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/258_3d_tracking_p4.m4v" length="85416557" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/258_3d_tracking_p4.m4v</guid>
	<pubDate>Wed, 14 May 2014 09:44:10 GMT</pubDate>
	<itunes:duration>00:09:30</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>









<item>
<!-- Episode 259 - Smoke 2015 -  Compositing with 3D Tracking - Bringing back foreground Elements  -->
	<title>Compositing with 3D Tracking - Bringing Elements back into the Foreground</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Part 5 of 5 - Compositing with 3D Tracking</itunes:subtitle>
	<itunes:summary>This video will show you a workflow to cut out any foreground elements and recomposed them back onto the background plate if they have been obscured by the 3D model.</itunes:summary>
	<description>This video will show you a workflow to cut out any foreground elements and recomposed them back onto the background plate if they have been obscured by the 3D model.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/259_3d_tracking_p5.m4v" length="71081612" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/259_3d_tracking_p5.m4v</guid>
	<pubDate>Wed, 14 May 2014 09:44:57 GMT</pubDate>
	<itunes:duration>00:07:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>











<item>
<!-- Episode 260 - Smoke 2015 -  4-point Tracking update  -->
	<title>Replacing a Road Sign with Four-Point Tracking - Smoke 2015</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Updated 4-point Tracking in Smoke 2015 </itunes:subtitle>
	<itunes:summary>This video shows the four corner pinning and four corner tracking workflow.

This workflow is typically used for screen replacements and replacing boards or signs.</itunes:summary>
	<description>This video shows the four corner pinning and four corner tracking workflow.

This workflow is typically used for screen replacements and replacing boards or signs.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/260_corner_pin.m4v" length="79390580" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/260_corner_pin.m4v</guid>
	<pubDate>Thu, 22 May 2014 09:17:19 GMT</pubDate>
	<itunes:duration>00:09:00</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 261 - Keying with Difference Mattes-->
	<title>Keying with Difference Mattes</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Create a difference matte in Autodesk Smoke.</itunes:subtitle>
	<itunes:summary>This video goes through the technique of creating a difference matte in Autodesk Smoke. 

Great for accelerating jobs that may require a lot of masking and this might give you a head start.</itunes:summary>
	<description>This video goes through the technique of creating a difference matte in Autodesk Smoke. 

Great for accelerating jobs that may require a lot of masking and this might give you a head start.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/261_diff_mattes.m4v" length="69446296" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/261_diff_mattes.m4v</guid>
	<pubDate>Fri, 30 May 2014 12:29:23 GMT</pubDate>
	<itunes:duration>00:07:15</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 262 - Selective Lighting in Action-->
	<title>Selective Lighting in Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Focus specific lights on specific objects in Action</itunes:subtitle>
	<itunes:summary>This user requested video goes through the workflow of using selective lighting in Action.

Choose which lights affect different 3D objects and surfaces in the 3D composite.</itunes:summary>
	<description>This user requested video goes through the workflow of using selective lighting in Action.

Choose which lights affect different 3D objects and surfaces in the 3D composite.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/262_selective_lighting_in_action.m4v" length="49971174" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/262_selective_lighting_in_action.m4v</guid>
	<pubDate>Fri, 06 Jun 2014 13:04:20 GMT</pubDate>
	<itunes:duration>00:05:28</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>





<item>
<!-- Episode 263 - Creating a Blooming Light Pass in Action-->
	<title>Creating a Blooming Light Pass in Action</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Create the well known light pass effect in Smoke</itunes:subtitle>
	<itunes:summary>This video shows you how to create the light pass effect with lights and a Blooming node.

This very popular effect is normally done with flat passes and masks.  However using the Action 3D compositing environment brings a wealth of flexibility!</itunes:summary>
	<description>This video shows you how to create the light pass effect with lights and a Blooming node.

This very popular effect is normally done with flat passes and masks.  However using the Action 3D compositing environment brings a wealth of flexibility!</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/263_action_light_pass.m4v" length="86128459" type="video/m2v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/263_action_light_pass.m4v</guid>
	<pubDate>Mon, 16 Jun 2014 14:16:59 GMT</pubDate>
	<itunes:duration>00:09:31</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 264 - Creating Gmasks - Part 1-->
	<title>Creating Masks with Gmask</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Autodesk Smoke Gmask Series</itunes:subtitle>
	<itunes:summary>This video introduces Masks in Autodesk Smoke.  Learning all about the general application and location of the Gmask.

We also cover all the different mask creation techniques.</itunes:summary>
	<description>This video introduces Masks in Autodesk Smoke.  Learning all about the general application and location of the Gmask.

We also cover all the different mask creation techniques.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/264_creating_masks.m4v" length="83080788" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/264_creating_masks.m4v</guid>
	<pubDate>Tue, 08 Jul 2014 09:16:07 GMT</pubDate>
	<itunes:duration>00:09:05</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>








<item>
<!-- Episode 265 - Editing Gmasks - Part 2-->
	<title>Editing Gmasks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Autodesk Smoke Gmask Series</itunes:subtitle>
	<itunes:summary>This video goes through all the different tools you have for editing your masks.

Workflows, tips and keyboard shortcuts included.</itunes:summary>
	<description>This video goes through all the different tools you have for editing your masks.

Workflows, tips and keyboard shortcuts included.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/265_editing_gmasks.m4v" length="58235183" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/265_editing_gmasks.m4v</guid>
	<pubDate>Tue, 08 Jul 2014 09:17:02 GMT</pubDate>
	<itunes:duration>00:06:37</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>











<item>
<!-- Episode 266 - Softening or Feathering Gmasks - Part 3-->
	<title>Softening or Feathering Gmasks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Autodesk Smoke Gmask Series</itunes:subtitle>
	<itunes:summary>This video looks at the two different types of softening or feathering available for masks.

We cover general offset softening as well as advanced edge gradient softening.</itunes:summary>
	<description>This video looks at the two different types of softening or feathering available for masks.

We cover general offset softening as well as advanced edge gradient softening.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/266_softening_gmasks.m4v" length="47304732" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/266_softening_gmasks.m4v</guid>
	<pubDate>Tue, 08 Jul 2014 09:18:04 GMT</pubDate>
	<itunes:duration>00:05:13</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







<item>
<!-- Episode 267 - Combining Gmasks - Part 4-->
	<title>Combining Gmask</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Autodesk Smoke Gmask Series</itunes:subtitle>
	<itunes:summary>This video shows all the different methods of combining Gmasks in the Gmask tools.

This includes creating Unions, Subtraction and Intersections.   These are common techniques used when masking but some of them are applied in Smoke a little differently.</itunes:summary>
	<description>This video shows all the different methods of combining Gmasks in the Gmask tools.

This includes creating Unions, Subtraction and Intersections.   These are common techniques used when masking but some of them are applied in Smoke a little differently.</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/267_combining_gmasks.m4v" length="64617221" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/267_combining_gmasks.m4v</guid>
	<pubDate>Tue, 22 Jul 2014 11:54:37 GMT</pubDate>
	<itunes:duration>00:06:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>




<item>
<!-- Episode 268 - Animating Gmasks - Part 5-->
	<title>Animating Gmasks</title>
	<itunes:author>Autodesk</itunes:author>
	<itunes:subtitle>Autodesk Smoke Gmask Series</itunes:subtitle>
	<itunes:summary>This video shows the types of animation that can be created with Gmasks.

This includes object animation and shape animation.   Each one has their uses and advantages.  All good stuff you need to know!</itunes:summary>
	<description>This video shows the types of animation that can be created with Gmasks.

This includes object animation and shape animation.   Each one has their uses and advantages.  All good stuff you need to know!</description>
	<enclosure url="http://areadownloads.autodesk.com/wdm/smoke/itunes/268_animating_gmasks.m4v" length="83904744" type="video/m4v" />
	<guid>http://areadownloads.autodesk.com/wdm/smoke/itunes/268_animating_gmasks.m4v</guid>
	<pubDate>Fri, 01 Aug 2014 14:48:30 GMT</pubDate>
	<itunes:duration>00:08:52</itunes:duration>
	<itunes:keywords>autodesk,smoke,smoke2015,learn,fcp,vfx,finishing,editing</itunes:keywords>
	<itunes:explicit>no</itunes:explicit>
</item>







</channel>
</rss>
</httpclient:body>
</httpclient:response>